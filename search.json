[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"/articles/Behaviour.html","id":"maximum-sustained-wind-speed","dir":"Articles","previous_headings":"","what":"Maximum sustained wind speed","title":"Behaviour","text":"maximum sustained wind speed (MSW, \\(m.s^{-1}\\)) lifespan storm computed follows: \\[ \\max(v(t) | t \\[0,T]) \\] \\(t\\) time observation\\(T\\) lifespan storm","code":""},{"path":"/articles/Behaviour.html","id":"power-dissipation-index","dir":"Articles","previous_headings":"","what":"Power Dissipation Index","title":"Behaviour","text":"power dissipation index (PDI, \\(J.m^{2}\\)) total power dissipated tropical storm lifespan (Emanuel 1999, 2005) computed follows: \\[ \\int_T \\rho \\times C_d \\times v_r^3 \\ dt \\] \\(t\\) time observation\\(T\\) lifespan storm\\(\\rho\\) air density fixed \\(1\\) \\(kg.m^{-3}\\) Emanuel (1999) \\(C_d\\) drag coefficient storm fixed \\(2\\) X \\(10^{-3}\\) Emanuel (1999)","code":""},{"path":"/articles/Behaviour.html","id":"duration-of-exposure","dir":"Articles","previous_headings":"","what":"Duration of exposure","title":"Behaviour","text":"duration exposure (\\(hours\\)) winds reaching defined speed thresholds computed follows: \\[ \\int_T c(v_t) dt \\] \\[ \\left\\{ \\begin{aligned} c(v_t) &= 1 \\quad \\quad v_t \\geq Thd\\\\ c(v_t) &= 0 \\quad \\quad v_t < Thd\\\\ \\end{aligned} \\right. \\] \\(t\\) time observation\\(T\\) lifespan storm\\(v_t\\) maximum sustained wind speed time \\(t\\) (\\(m.s^{-1}\\))\\(Thd\\) minimum wind sped threshold (\\(m.s^{-1}\\)) default duration exposure computed Saffir-Simpson Hurricane Scale threshold values tropical cyclone categories (.e., \\(33\\), \\(43\\), \\(50\\) ,\\(58\\), \\(70\\) \\(m.s^{-1}\\), (Simpson 1974)) can defined using wind_threshold argument.","code":""},{"path":[]},{"path":"/articles/DataSource.html","id":"downloading-a-data-source","dir":"Articles","previous_headings":"","what":"Downloading a data source","title":"Data source","text":"available, storm track data set downloaded. following example illustrate storm track data set can downloaded IBTrACKS website. Different “.nc” (NetCDF) files containing storm track data sets can downloaded . Please, follow IBTrACS citation recommendations using datasets (including citing Knapp et al. (2010, 2018), providing access date later). example, track data storms occurred last three years different basins world wide can download working directory follows,","code":"download.file(url = \"https://www.ncei.noaa.gov/data/international-best-track-archive-for-climate-stewardship-ibtracs/v04r00/access/netcdf/IBTrACS.last3years.v04r00.nc\", destfile = \"./IBTrACS_ALL_3yrs.nc\")"},{"path":"/articles/DataSource.html","id":"creating-a-stormsdataset","dir":"Articles","previous_headings":"","what":"Creating a stormsDataset","title":"Data source","text":"storm track data set available stormsDataset object can created using defStormsDataset() function follows, stormsDataset object contains track data 275 storms. using IBTrACKS storm track data set, default arguments can used. default, data provided USA agencies (starting “usa_”) used, data can selected. example, South Pacific basin (“SP”), can choose use data provided Australian Bureau Meteorology (starting “bom_”) IBTrACKS data set follows, stormsDataset object contains track data 38 storms South Pacific basin.","code":"sds <- defStormsDataset(filename = \"./IBTrACS_ALL_3yrs.nc\", basin = NULL, verbose = 0) ## Warning in checkInputsdefStormsDataset(filename, fields, basin, seasons, : No basin argument specified. StormR will work as expected ##              but cannot use basin filtering for speed-up when collecting data str(sds) ## Formal class 'stormsDataset' [package \"StormR\"] with 5 slots ##   ..@ filename: chr \"./IBTrACS_ALL_3yrs.nc\" ##   ..@ fields  : Named chr [1:11] \"name\" \"season\" \"iso_time\" \"usa_lon\" ... ##   .. ..- attr(*, \"names\")= chr [1:11] \"names\" \"seasons\" \"isoTime\" \"lon\" ... ##   ..@ basin   : chr \"None\" ##   ..@ seasons : Named int [1:2] 2021 2024 ##   .. ..- attr(*, \"names\")= chr [1:2] \"min\" \"max\" ##   ..@ database:List of 10 ##   .. ..$ names    : chr [1:297(1d)] \"IMOGEN\" \"NOT_NAMED\" \"ELOISE\" \"JOSHUA\" ... ##   .. ..$ seasons  : int [1:297(1d)] 2021 2021 2021 2021 2021 2021 2021 2021 2021 2021 ... ##   .. ..$ isotimes : chr [1:360, 1:297] \"2021-01-01 00:00:00\" \"2021-01-01 03:00:00\" \"2021-01-01 06:00:00\" \"2021-01-01 09:00:00\" ... ##   .. ..$ longitude: num [1:360, 1:297] NA NA NA NA NA NA NA NA NA NA ... ##   .. ..$ latitude : num [1:360, 1:297] NA NA NA NA NA NA NA NA NA NA ... ##   .. ..$ msw      : num [1:360, 1:297] NA NA NA NA NA NA NA NA NA NA ... ##   .. ..$ sshs     : int [1:360, 1:297] -5 -5 -5 -5 -5 -5 -5 -5 -5 -5 ... ##   .. ..$ rmw      : num [1:360, 1:297] NA NA NA NA NA NA NA NA NA NA ... ##   .. ..$ pressure : num [1:360, 1:297] NA NA NA NA NA NA NA NA NA NA ... ##   .. ..$ poci     : num [1:360, 1:297] NA NA NA NA NA NA NA NA NA NA ... length(unique(paste(sds@database$names, sds@database$seasons, \" \"))) ## [1] 241 sds <- defStormsDataset(   filename = \"IBTrACS_ALL_3yrs.nc\",   fields = c(     names = \"name\",     seasons = \"season\",     isoTime = \"iso_time\",     basin = \"basin\",     lon = \"bom_lon\",     lat = \"bom_lat\",     msw = \"bom_wind\",     rmw = \"bom_rmw\",     pressure = \"bom_pres\",     poci = \"bom_poci\"   ),   basin = \"SP\",   verbose = 0 ) length(sds@database$names) ## [1] 27"},{"path":"/articles/DataSource.html","id":"unit-conversion","dir":"Articles","previous_headings":"","what":"Unit conversion","title":"Data source","text":"IBTrACS data sets speeds given knots (\\(knt\\)), distances nautical miles (\\(nm\\)), pressure millibar (\\(mb\\)) models implemented temporalBehaviour() spatialBehaviour() functions compute wind speed, wind direction, summary statistics following international system units (SI) SI-derived units. Therefore, default, using IBTrACS data sets, defStormsDataset() function converts knots (\\(knt\\)) meter per second (\\(m.s^{-1}\\)), nautical miles (\\(nm\\)) kilometres (\\(km\\)), millibar (\\(mb\\)) Pascal (\\(pa\\)). using another source data IBTrACS, unitConversion argument defStormsDataset() function can used convert data desired units. following conversions available, msw: knt2ms: converts knot meter per second (default setting) kmh2ms: converts kilometre per hour meter per second mph2ms: converts miles per hour meter per second None: conversion rmw: nm2ms: converts nautical miles kilometer (default setting) None: conversion pressure poci: mb2pa: converts millibar Pascal (default setting) b2pa: converts bar Pascal atm2pa: converts atmosphere Pascal psi2pa: converts psi Pascal None: conversion","code":""},{"path":"/articles/DataSource.html","id":"test-data-set","dir":"Articles","previous_headings":"","what":"Test data set","title":"Data source","text":"test_dataset provided StormR package. test data set comprises track data nine storms occurred near Vanuatu New Caledonia 2015-2016 2020-2021, respectively.","code":""},{"path":[]},{"path":[]},{"path":"/articles/ExtractStorms.html","id":"using-country-names","dir":"Articles","previous_headings":"Getting and ploting tropical cyclone track data","what":"Using country names","title":"Extract Storms","text":"extract data tropical cyclone Pam (2015) nearby Vanuatu follows: defStormsList() function returns stormsList object first slot @data contains list Storm objects. specification stormsList contains one Storm object corresponding cyclone PAM track data can obtained using getObs() function follows: number observation indices observations can obtained using getNbObs() getInObs() follows: data can visualised map follows:","code":"sds <- defStormsDataset(verbose = 0) ## Warning in checkInputsdefStormsDataset(filename, fields, basin, seasons, : No basin argument specified. StormR will work as expected ##              but cannot use basin filtering for speed-up when collecting data st <- defStormsList(sds = sds, loi = \"Vanuatu\", names = \"PAM\", verbose = 0) head(getObs(st, name = \"PAM\")) ##              iso.time      lon       lat msw sshs rmw   pres   poci ## 1 2015-03-08 12:00:00 168.9000 -7.500000  13   -1  93 100400 100500 ## 2 2015-03-08 15:00:00 169.0425 -7.652509  14   -1  93 100200 100200 ## 3 2015-03-08 18:00:00 169.2000 -7.800000  15   -1  93 100000 100000 ## 4 2015-03-08 21:00:00 169.3850 -7.942489  15   -1  93 100000 100000 ## 5 2015-03-09 00:00:00 169.6000 -8.100000  15   -1  93 100000 100100 ## 6 2015-03-09 03:00:00 169.8425 -8.284999  16   -1  93  99800 100100 getNbObs(st, name = \"PAM\") ## [1] 57 getInObs(st, name = \"PAM\") ##  [1] 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 plotStorms(st, labels = TRUE)"},{"path":"/articles/ExtractStorms.html","id":"using-a-specified-point-location","dir":"Articles","previous_headings":"Getting and ploting tropical cyclone track data","what":"Using a specified point location","title":"Extract Storms","text":"can extract tropical cyclones near Nouméa (longitude = 166.45, latitude = -22.27) 2015 2021 follows: number, names, season occurrence storms returned stormsList object can obtained using getNbStorms(), getNames(), getSeasons() functions follows: can plot track data topical cyclone Niran using names argument plotStorms() function follows:  track data Niran can also extracted stored new object using getStorm() function follows:","code":"pt <- c(166.45, -22.27) st <- defStormsList(sds = sds, loi = pt, seasons = c(2015, 2021), verbose = 0) getNbStorms(st) ## [1] 4 getNames(st) ## [1] \"SOLO\"   \"GRETEL\" \"LUCAS\"  \"NIRAN\" getSeasons(st) ##   SOLO GRETEL  LUCAS  NIRAN  ##   2015   2020   2021   2021 plotStorms(st, names = \"NIRAN\", labels = TRUE, legends = \"bottomleft\") NIRAN <- getStorm(st, name = \"NIRAN\") getNames(NIRAN) ## [1] \"NIRAN\""},{"path":"/articles/ExtractStorms.html","id":"using-a-user-defined-spatial-polygon-shapefile","dir":"Articles","previous_headings":"Getting and ploting tropical cyclone track data","what":"Using a user defined spatial polygon shapefile","title":"Extract Storms","text":"can extract tropical cyclones occurred 2015 2021 near New Caledonia exclusive economic zone using eezNC shapefile provided StormR package follows: Information spatial extent track data exaction can obtained using getLOI(), getBuffer(), getBufferSize() functions follows:  maximum category cyclone Saffir-Simpson hurricane wind scale can obtained using getSSHS() function follows: can plot category 4 5 tropical cyclones using category argument plotStorms() function follows:","code":"sp <- eezNC st <- defStormsList(sds = sds, loi = eezNC, season = c(2015, 2021), verbose = 0) LOI <- getLOI(st) Buffer <- getBuffer(st) BufferSize <- getBufferSize(st) terra::plot(Buffer, lty = 3, main = paste(BufferSize, \"km buffer arround New Caledonian EEZ\", sep = \" \")) terra::plot(LOI, add = TRUE) terra::plot(countriesHigh, add = TRUE) getSSHS(st) ##     PAM    SOLO     ULA WINSTON    ZENA    UESI  GRETEL   LUCAS   NIRAN  ##       5       0       4       5       2       1       1       1       5 plotStorms(st, category = c(4, 5), labels = FALSE, legends = \"topright\")"},{"path":"/articles/Models.html","id":"holland-1980-symmetric-wind-field","dir":"Articles","previous_headings":"","what":"Holland (1980) symmetric wind field","title":"Models","text":"Holland model (1980), widely used literature, based gradient wind balance mature tropical cyclones. wind speed distribution computed circular air pressure field, can derived central environmental pressure radius maximum winds. \\[ v_r = \\sqrt{\\frac{b}{\\rho} \\times \\left(\\frac{R_m}{r}\\right)^b \\times (p_{oci} - p_c) \\times e^{-\\left(\\frac{R_m}{r}\\right)^b} + \\left(\\frac{r \\times f}{2}\\right)^2} - \\left(\\frac{r \\times f}{2}\\right) \\] , \\[ b = \\frac{\\rho \\times e \\times v_m^2}{p_{oci} - p_c} \\] \\[ f = 2 \\times 7.29 \\times 10^{-5} \\sin(\\phi) \\] , \\(v_r\\) tangential wind speed (\\(m.s^{-1}\\)), \\(b\\) shape parameter, \\(\\rho\\) air density set \\(1.15 kg.m^{-3}\\), \\(e\\) base natural logarithms (~2.718282), \\(v_m\\) maximum sustained wind speed (\\(m.s^{-1}\\)), \\(p_{oci}\\) pressure outermost closed isobar storm (\\(Pa\\)), \\(p_c\\) pressure centre storm (\\(Pa\\)), \\(r\\) distance eye storm (\\(km\\)), \\(R_m\\) radius maximum sustained wind speed (\\(km\\)), \\(f\\) Coriolis force (\\(N.kg^{-1}\\)), \\(\\phi\\) latitude.","code":""},{"path":"/articles/Models.html","id":"willoughby-et-al---willoughby_parametric_2006-symmetric-wind-field","dir":"Articles","previous_headings":"","what":"Willoughby et al. (2006) symmetric wind field","title":"Models","text":"Willoughby et al. (2006) model empirical model fitted aircraft observations. model considers two regions: inside eye external radii, wind formulations use different exponents better match observations. model, wind speed increases power function radius inside eye decays exponentially outside eye smooth polynomial transition across eyewall (see also Willoughby (1995), Willoughby et al. (2004)). \\[ \\left\\{ \\begin{aligned} v_r &= v_m \\times \\left(\\frac{r}{R_m}\\right)^{n} \\quad \\quad r < R_m \\\\ v_r &= v_m \\times \\left((1-) \\times e^{-\\frac{|r-R_m|}{X1}} + \\times e^{-\\frac{|r-R_m|}{X2}}\\right) \\quad \\quad r \\geq R_m \\\\ \\end{aligned} \\right. \\] , \\[ n = 2.1340 + 0.0077 \\times v_m - 0.4522 \\times \\ln(R_m) - 0.0038 \\times |\\phi| \\] \\[ X1 = 287.6 - 1.942 \\times v_m + 7.799 \\times \\ln(R_m) + 1.819 \\times |\\phi| \\] \\[ = 0.5913 + 0.0029 \\times v_m - 0.1361 \\times \\ln(R_m) - 0.0042 \\times |\\phi| \\quad \\quad \\ge0 \\] , \\(v_r\\) tangential wind speed (\\(m.s^{-1}\\)), \\(v_m\\) maximum sustained wind speed (\\(m.s^{-1}\\)), \\(r\\) distance eye storm (\\(km\\)), \\(R_m\\) radius maximum sustained wind speed (\\(km\\)), \\(\\phi\\) latitude centre storm, \\(X2 = 25\\).","code":""},{"path":"/articles/Models.html","id":"adding-asymmetry-to-holland_analytic_1980-and-willoughby-et-al---willoughby_parametric_2006-wind-fields","dir":"Articles","previous_headings":"","what":"Adding asymmetry to Holland (1980) and Willoughby et al. (2006) wind fields","title":"Models","text":"asymmetry caused translation storm can added follows, \\(\\vec{V} = \\vec{V_c} + C \\times \\vec{V_t}\\) , \\(\\vec{V}\\) combined, asymmetric wind field, \\(\\vec{V_c}\\) symmetric wind field, \\(\\vec{V_t}\\) translation speed storm, \\(C\\) function \\(r\\), distance eye storm (\\(km\\)). Two formulations C proposed Miyazaki et al. (1962) Chen (1994) implemented.","code":""},{"path":"/articles/Models.html","id":"miyazaki-et-al---miyazaki_typhoon_1962","dir":"Articles","previous_headings":"Adding asymmetry to Holland (1980) and Willoughby et al. (2006) wind fields","what":"Miyazaki et al. (1962)","title":"Models","text":"\\(C = e^{(-\\frac{r}{500} \\times \\pi)}\\)","code":""},{"path":"/articles/Models.html","id":"chen1994computation","dir":"Articles","previous_headings":"Adding asymmetry to Holland (1980) and Willoughby et al. (2006) wind fields","what":"Chen (1994)","title":"Models","text":"\\(C = \\frac{3 \\times R_m^{\\frac{3}{2}} \\times r^{\\frac{3}{2}}}{R_m^3 + r^3 +R_m^{\\frac{3}{2}} \\times r^{\\frac{3}{2}}}\\) , \\(R_m\\) radius maximum sustained wind speed (\\(km\\)).","code":""},{"path":"/articles/Models.html","id":"boose-et-al---boose_landscape_2004-asymmetric-model","dir":"Articles","previous_headings":"","what":"Boose et al. (2004) asymmetric model","title":"Models","text":"Boose et al. (2004) model, “HURRECON” model, modification Holland (1980) model (see also Boose et al. (2001)). addition adding asymmetry, model treats water land differently, using different surface friction coefficient .","code":""},{"path":"/articles/Models.html","id":"wind-speed","dir":"Articles","previous_headings":"Boose et al. (2004) asymmetric model","what":"Wind speed","title":"Models","text":"Wind speed computed follows, \\[ v_r = F\\left(v_m - S \\times (1 - \\sin(T)) \\times \\frac{v_h}{2} \\right) \\times \\sqrt{\\left(\\frac{R_m}{r}\\right)^b \\times e^{1 - \\left(\\frac{R_m}{r}\\right)^b}} \\] , \\[ b = \\frac{\\rho \\times e \\times v_m^2}{p_{oci} - p_c} \\] , \\(v_r\\) tangential wind speed (\\(m.s^{-1}\\)), \\(F\\) scaling parameter friction (\\(1.0\\) water, \\(0.8\\) land), \\(v_m\\) maximum sustained wind speed (\\(m.s^{-1}\\)), \\(S\\) scaling parameter asymmetry (usually set \\(1\\)), \\(T\\) oriented angle (clockwise/counter clockwise Northern/Southern Hemisphere) forward trajectory storm radial line eye storm point \\(r\\), \\(v_h\\) storm velocity (\\(m.s^{-1}\\)), \\(R_m\\) radius maximum sustained wind speed (\\(km\\)), \\(r\\) distance eye storm (\\(km\\)), \\(b\\) shape parameter, \\(\\rho = 1.15\\) air density (\\(kg.m^{-3}\\)), \\(p_{oci}\\) pressure outermost closed isobar storm (\\(Pa\\)), \\(p_c\\) pressure centre storm (\\(pressure\\) \\(Pa\\)).","code":""},{"path":"/articles/Models.html","id":"wind-direction","dir":"Articles","previous_headings":"Boose et al. (2004) asymmetric model","what":"Wind direction","title":"Models","text":"Wind direction computed follows, \\[ \\left\\{ \\begin{aligned} D = A_z - 90 - \\quad \\quad \\phi > 0 \\quad(Northern \\quad Hemispher) \\\\ D = A_z - 90 - \\quad \\quad \\phi \\leq 0 \\quad(Southern \\quad Hemispher) \\\\ \\end{aligned} \\right. \\] , \\(D\\) direction radial wind, \\(A_z\\) azimuth point r eye storm, \\(\\) cross isobar inflow angle (\\(20\\) water, \\(40\\) land), \\(\\phi\\) latitude.","code":""},{"path":"/articles/Models.html","id":"wind-fields-comparison","dir":"Articles","previous_headings":"","what":"Wind fields comparison","title":"Models","text":", compare wind fields generated different models can used StormR time location (tropical cyclone Pam near Vanuatu)","code":"sds <- defStormsDataset() ## Warning in checkInputsdefStormsDataset(filename, fields, basin, seasons, : No basin argument specified. StormR will work as expected ##              but cannot use basin filtering for speed-up when collecting data ## === Loading data  === ## Open database... /home/runner/work/_temp/Library/StormR/extdata/test_dataset.nc opened ## Collecting data ... ## === DONE === st <- defStormsList(sds = sds, loi = c(168.33, -17.73), names = \"PAM\", verbose = 0) PAM <- getObs(st, name = \"PAM\")  pf <- spatialBehaviour(st, product = \"Profiles\", method = \"Holland\", asymmetry = \"None\", verbose = 0) terra::plot(pf$PAM_Speed_41, main = \"Holland (1980)\", cex.main = 0.8, range = c(0, 90)) terra::plot(countriesHigh, add = TRUE) lines(PAM$lon, PAM$lat, lty = 3) pf <- spatialBehaviour(st, product = \"Profiles\", method = \"Willoughby\", asymmetry = \"None\", verbose = 0) terra::plot(pf$PAM_Speed_41, main = \"Willoughby et al. (2006)\", cex.main = 0.8, range = c(0, 90)) terra::plot(countriesHigh, add = TRUE) lines(PAM$lon, PAM$lat, lty = 3) pf <- spatialBehaviour(st, product = \"Profiles\", method = \"Holland\", asymmetry = \"Miyazaki\", verbose = 0) terra::plot(pf$PAM_Speed_41, main = \"Holland (1980) + Miyazaki et al. (1962)\", cex.main = 0.8, range = c(0, 90)) terra::plot(countriesHigh, add = TRUE) lines(PAM$lon, PAM$lat, lty = 3) pf <- spatialBehaviour(st, product = \"Profiles\", method = \"Willoughby\", asymmetry = \"Miyazaki\", verbose = 0) terra::plot(pf$PAM_Speed_41, main = \"Willoughby et al. (2006) + Miyazaki et al. (1962)\", cex.main = 0.8, range = c(0, 90)) terra::plot(countriesHigh, add = TRUE) lines(PAM$lon, PAM$lat, lty = 3) pf <- spatialBehaviour(st, product = \"Profiles\", method = \"Holland\", asymmetry = \"Chen\", verbose = 0) terra::plot(pf$PAM_Speed_41, main = \"Holland (1980) + Chen (1994)\", cex.main = 0.8, range = c(0, 90)) terra::plot(countriesHigh, add = TRUE) lines(PAM$lon, PAM$lat, lty = 3) pf <- spatialBehaviour(st, product = \"Profiles\", method = \"Willoughby\", asymmetry = \"Chen\", verbose = 0) terra::plot(pf$PAM_Speed_41, main = \"Willoughby et al. (2006) + Chen (1994)\", cex.main = 0.8, range = c(0, 90)) terra::plot(countriesHigh, add = TRUE) lines(PAM$lon, PAM$lat, lty = 3) pf <- spatialBehaviour(st, product = \"Profiles\", method = \"Boose\", verbose = 0) terra::plot(pf$PAM_Speed_41, main = \"Boose et al. (2004)\", cex.main = 0.8, range = c(0, 90)) terra::plot(countriesHigh, add = TRUE) lines(PAM$lon, PAM$lat, lty = 3) par(oldpar)"},{"path":[]},{"path":"/articles/SpatialBehaviour.html","id":"computing-and-plotting-spatialbehaviour-products","dir":"Articles","previous_headings":"","what":"Computing and plotting spatialBehaviour products","title":"spatialBehaviour","text":"can compute behaviour winds generated topical cyclone Pam (2015) near Vanuatu. First, track data extracted follows:","code":"sds <- defStormsDataset() ## Warning in checkInputsdefStormsDataset(filename, fields, basin, seasons, : No basin argument specified. StormR will work as expected ##              but cannot use basin filtering for speed-up when collecting data ## === Loading data  === ## Open database... /home/runner/work/_temp/Library/StormR/extdata/test_dataset.nc opened ## Collecting data ... ## === DONE === st <- defStormsList(sds = sds, loi = \"Vanuatu\", names = \"PAM\", verbose = 0) plotStorms(st)"},{"path":"/articles/SpatialBehaviour.html","id":"wind-profiles","dir":"Articles","previous_headings":"Computing and plotting spatialBehaviour products","what":"Wind profiles","title":"spatialBehaviour","text":"Using track data spatialBehaviour() function product=\"Profiles argument can generate 2D wind fields time follows: function returns SpatRaster object two rasters, one wind speed one wind direction, observation interpolated observation. Rasters’ names follow following terminology, name storm capital letters, “Speed” “Direction”, index observation, separated underscores. Note actual observations entire indices (e.g., 41, 42, …) interpolated observation decimals (e.g., 41.1, 41.2, …). tropical cyclone track data sets based observations gathered every 3 6 hours. Therefore, able compute wind fields every 1 hour, observations interpolated. Wind speed direction profiles 41th observation can plotted follows:","code":"pf <- spatialBehaviour(st, product = \"Profiles\", verbose = 0) pf ## class       : SpatRaster  ## dimensions  : 304, 219, 114  (nrow, ncol, nlyr) ## resolution  : 0.04166667, 0.04166667  (x, y) ## extent      : 163.7083, 172.8333, -23, -10.33333  (xmin, xmax, ymin, ymax) ## coord. ref. : lon/lat WGS 84  ## source(s)   : memory ## names       : PAM_Speed_28, PAM_S~_28.1, PAM_S~_28.2, PAM_Speed_29, PAM_S~_29.1, PAM_S~_29.2, ...  ## min values  :        5.927,       2.302,       3.807,        3.087,       0.848,       2.971, ...  ## max values  :       61.110,      63.420,      64.483,       63.610,      64.753,      65.017, ...  ## time        : 2015-03-11 21:00:00 to 2015-03-14 05:00:00 UTC plotBehaviour(st, pf$PAM_Speed_41) plotBehaviour(st, pf$PAM_Direction_41)"},{"path":"/articles/SpatialBehaviour.html","id":"summary-statisics","dir":"Articles","previous_headings":"Computing and plotting spatialBehaviour products","what":"Summary statisics","title":"spatialBehaviour","text":"spatialBehaviour() function can compute different products (.e., \"Profiles\", \"MSW\", \"PDI\", \"Exposure\") either separately together. , compute three summary statistics together follows: spatialBehaviour() function returns SpatRaster object eight rasters: one maximum sustained wind speed (\"MSW\"), one power dissipation index (\"PDI\"), one six defaults wind thresholds values set duration exposure (\"Exposure\"). default, function returns duration exposure (hours) wind speeds thresholds used Saffir-Simpson hurricane wind scale (.e., 18, 33, 42, 49, 58, 70 \\(m.s^{-1}\\)). can change using wind_threshold argument. maximum sustained wind speed can plotted follows:  power dissipation index can plotted follows:  duration exposure wind stronger 58 \\(m.s^{-1}\\) (.e., Saffir-Simpson’s categories 4 5) can plotted follows:","code":"ss <- spatialBehaviour(st, product = c(\"MSW\", \"PDI\", \"Exposure\"), verbose = 0) ss ## class       : SpatRaster  ## dimensions  : 304, 219, 8  (nrow, ncol, nlyr) ## resolution  : 0.04166667, 0.04166667  (x, y) ## extent      : 163.7083, 172.8333, -23, -10.33333  (xmin, xmax, ymin, ymax) ## coord. ref. : lon/lat WGS 84  ## source(s)   : memory ## names       : PAM_MSW,     PAM_PDI, PAM_E~re_18, PAM_E~re_33, PAM_E~re_42, PAM_E~re_49, ...  ## min values  : 13.7870,    5.241304,     1.00000,     1.00000,    1.000000,    1.000000, ...  ## max values  : 73.9045, 4692.619898,    30.90083,    14.70248,    9.446281,    6.826446, ... names(ss) ## [1] \"PAM_MSW\"         \"PAM_PDI\"         \"PAM_Exposure_18\" \"PAM_Exposure_33\" ## [5] \"PAM_Exposure_42\" \"PAM_Exposure_49\" \"PAM_Exposure_58\" \"PAM_Exposure_70\" plotBehaviour(st, ss$PAM_MSW) plotBehaviour(st, ss$PAM_PDI) plotBehaviour(st, ss$PAM_Exposure_58)"},{"path":"/articles/SpatialBehaviour.html","id":"spatio-temporal-resolution","dir":"Articles","previous_headings":"","what":"Spatio-temporal resolution","title":"spatialBehaviour","text":"WorldClim database (https://worldclim.org/data/worldclim21.html) four spatial resolutions available. default spatial resolution set 2.5 min (~4.5 km equator), finer spatial resolution 30 s (~1 km equator) coarser spatial resolutions 5 min (~9 km equator) 10 min (~18.6 km equator) can set using spaceRes argument. temporal resolution set 1 hour default finer spatial resolution 0.75, 0.50, 0.25 hour can set using tempRes argument. Maximum sustained wind speed can computed 10 min spatial resolution 30 min temporal resolution follows:","code":"ss <- spatialBehaviour(st, product = c(\"MSW\"), verbose = 0, spaceRes = \"10min\", tempRes = 0.5) plotBehaviour(st, ss$PAM_MSW)"},{"path":"/articles/SpatialBehaviour.html","id":"exporting-spatialbehaviour-products","dir":"Articles","previous_headings":"","what":"Exporting spatialBehaviour products","title":"spatialBehaviour","text":"spatialBehaviour() function returns rasters stored SpatRaster object can exported either “.tiff” “.nc” (NetCDF) formats using writeRast() function. , export maximum sustained wind speed working directory follows:","code":"writeRast(ss$PAM_MSW)"},{"path":"/articles/TemporalBehaviour.html","id":"computing-and-plotting-time-series-of-wind-speed-and-direction","dir":"Articles","previous_headings":"","what":"Computing and plotting time series of wind speed and direction","title":"temporalBehaviour","text":"compute plot time series speed direction winds generated topical cyclone Pam (2015) two main cities Vanuatu, Port Vila (longitude = 168.33, latitude = -17.73) Luganville (longitude = 167.17, latitude = -15.53). coordinates two locations interest provided data frame follows: track data Pam nearby Vanuatu extracted follows:  temporalBehaviour() function product = \"TS\" argument used compute time series. default temporal resolution set 1 hour can changed using tempRes argument. set temporal resolution 30 min tempRes=0.5 follows: specification temporalBehaviour() function returns list two data frames (.e., one location) wind speed (“speed”), direction (“direction”), indices observations date time observation (“isoTimes”). use data frame draw time series plots wind speed wind direction follows:   Maximum sustained wind speed Port Vila Luganville can computed follows:","code":"df <- data.frame(x = c(168.33, 167.17), y = c(-17.73, -15.53)) rownames(df) <- c(\"Port_Vila\", \"Luganville\") sds <- defStormsDataset() ## Warning in checkInputsdefStormsDataset(filename, fields, basin, seasons, : No basin argument specified. StormR will work as expected ##              but cannot use basin filtering for speed-up when collecting data ## === Loading data  === ## Open database... /home/runner/work/_temp/Library/StormR/extdata/test_dataset.nc opened ## Collecting data ... ## === DONE === st <- defStormsList(sds = sds, loi = \"Vanuatu\", names = \"PAM\", verbose = 0) plotStorms(st) points(df$x, df$y, pch = 3, col = c(\"blue\", \"red\")) text(df$x, df$y, labels = c(\"Port Vila\", \"Luganville\"), pos = 2, col = c(\"blue\", \"red\"), cex = 0.8) TS <- temporalBehaviour(st, points = df, product = \"TS\", tempRes = 0.5, verbose = 0) str(TS) ## List of 1 ##  $ PAM:List of 2 ##   ..$ Port_Vila :'data.frame':   115 obs. of  4 variables: ##   .. ..$ speed    : num [1:115] NA NA NA NA NA NA NA NA NA NA ... ##   .. ..$ direction: num [1:115] NA NA NA NA NA NA NA NA NA NA ... ##   .. ..$ indices  : chr [1:115] \"28\" \"28.1\" \"28.2\" \"28.3\" ... ##   .. ..$ isoTimes : chr [1:115] \"2015-03-11 21:00:00\" \"2015-03-11 21:30:00\" \"2015-03-11 22:00:00\" \"2015-03-11 22:30:00\" ... ##   ..$ Luganville:'data.frame':   115 obs. of  4 variables: ##   .. ..$ speed    : num [1:115] NA NA NA NA NA NA NA NA NA NA ... ##   .. ..$ direction: num [1:115] NA NA NA NA NA NA NA NA NA NA ... ##   .. ..$ indices  : chr [1:115] \"28\" \"28.1\" \"28.2\" \"28.3\" ... ##   .. ..$ isoTimes : chr [1:115] \"2015-03-11 21:00:00\" \"2015-03-11 21:30:00\" \"2015-03-11 22:00:00\" \"2015-03-11 22:30:00\" ... plot(TS$PAM$Port_Vila$speed, type = \"l\", ylim = c(0, 60), xlab = \"\", ylab = \"Wind speed (m/s)\", axes = FALSE, col = \"blue\") points(TS$PAM$Port_Vila$speed, col = \"blue\", pch = 3) lines(TS$PAM$Luganville$speed, col = \"red\") points(TS$PAM$Luganville$speed, col = \"red\", pch = 3) legend(\"topleft\", pch = 3, col = c(\"blue\", \"red\"), legend = c(\"Port Vila\", \"Luganville\"), bty = \"n\") axis(1, at = seq(1, length(TS$PAM$Port_Vila$speed)), labels = TS$PAM$Port_Vila$isoTimes, las = 2) axis(2, at = seq(0, 60, 10), labels = seq(0, 60, 10), las = 2) plot(TS$PAM$Port_Vila$direction, type = \"l\", ylim = c(0, 360), xlab = \"\", ylab = \"Wind direction (degree north)\", axes = FALSE, col = \"blue\") points(TS$PAM$Port_Vila$direction, col = \"blue\", pch = 3) lines(TS$PAM$Luganville$direction, col = \"red\") points(TS$PAM$Luganville$direction, col = \"red\", pch = 3) legend(\"topleft\", pch = 3, col = c(\"blue\", \"red\"), legend = c(\"Port Vila\", \"Luganville\"), bty = \"n\") axis(1, at = seq(1, length(TS$PAM$Port_Vila$speed)), labels = TS$PAM$Port_Vila$isoTimes, las = 2) axis(2, at = seq(0, 360, 90), labels = seq(0, 360, 90), las = 2) max(TS$PAM$Port_Vila$speed, na.rm = TRUE) ## [1] 53.312 max(TS$PAM$Luganville$speed, na.rm = TRUE) ## [1] 22.112"},{"path":"/articles/TemporalBehaviour.html","id":"getting-power-dissipation-index","dir":"Articles","previous_headings":"","what":"Getting power dissipation index","title":"temporalBehaviour","text":"power dissipation index computed using product = \"PDI\" argument follows:","code":"PDI <- temporalBehaviour(st, points = df, product = \"PDI\", tempRes = 0.5, verbose = 0) PDI ## $PAM ##     Port_Vila Luganville ## PDI  2101.754    335.194"},{"path":"/articles/TemporalBehaviour.html","id":"getting-duration-of-exposure","dir":"Articles","previous_headings":"","what":"Getting duration of exposure","title":"temporalBehaviour","text":"duration exposure computed using product = \"Exposure\" argument follows: default, function returns duration exposure (hours) wind speeds thresholds used Saffir-Simpson hurricane wind scale (.e., 18, 33, 42, 49, 58, 70 \\(m.s^{-1}\\)). However, different thresholds can set using wind_threshold arguments. can use thresholds used Australian Bureau Meteorology rank tropical cyclones intensity follow:","code":"exposure_SS <- temporalBehaviour(st, points = df, product = \"Exposure\", tempRes = 0.5, verbose = 0) exposure_SS ## $PAM ##                       Port_Vila Luganville ## Min threshold: 18 m/s      23.0         16 ## Min threshold: 33 m/s       9.5          0 ## Min threshold: 42 m/s       5.0          0 ## Min threshold: 49 m/s       2.0          0 ## Min threshold: 58 m/s       0.0          0 ## Min threshold: 70 m/s       0.0          0 wt <- c(17.2, 24.4, 32.5, 44.2, 55.0) exposure_BOM <- temporalBehaviour(st, points = df, product = \"Exposure\", tempRes = 0.5, windThreshold = wt, verbose = 0) exposure_BOM ## $PAM ##                         Port_Vila Luganville ## Min threshold: 17.2 m/s        24       17.5 ## Min threshold: 24.4 m/s        16        0.0 ## Min threshold: 32.5 m/s        10        0.0 ## Min threshold: 44.2 m/s         4        0.0 ## Min threshold: 55 m/s           0        0.0"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Baptiste Delaporte. Author. Thomas Ibanez. Author. Gunnar Keppel. Author. Swen Jullien. Author. Christophe Menkes. Author. Thomas Arsouze. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Delaporte B, Ibanez T, Keppel G, Jullien S, Menkes C, Arsouze T (2024). StormR: Analyzing Behaviour Wind Generated Tropical Storms Cyclones. R package version 0.1.1, https://umr-amap.github.io/StormR/.","code":"@Manual{,   title = {StormR: Analyzing the Behaviour of Wind Generated by Tropical Storms and Cyclones},   author = {Baptiste Delaporte and Thomas Ibanez and Gunnar Keppel and Swen Jullien and Christophe Menkes and Thomas Arsouze},   year = {2024},   note = {R package version 0.1.1},   url = {https://umr-amap.github.io/StormR/}, }"},{"path":[]},{"path":"/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Analyzing the Behaviour of Wind Generated by Tropical\n    Storms and Cyclones","text":"StormR R package allowing easily extract storm track data given locations areas interests, generate wind speed direction fields, compute summary statistics characterising behaviour winds generated tropical storms cyclones: maximum sustained wind speed, power dissipation index, duration exposure winds reaching defined speed thresholds.","code":""},{"path":[]},{"path":"/index.html","id":"installing-stormr","dir":"","previous_headings":"Usage","what":"Installing StormR","title":"Analyzing the Behaviour of Wind Generated by Tropical\n    Storms and Cyclones","text":"StormR now available CRAN version 0.1.1. can install follows: latest development version can installed GitHub follows,","code":"install.packages(\"StormR\") #install.packages(\"devtools\") devtools::install_github(\"umr-amap/StormR\")"},{"path":"/index.html","id":"loading-stormr-package","dir":"","previous_headings":"Usage","what":"Loading StormR package","title":"Analyzing the Behaviour of Wind Generated by Tropical\n    Storms and Cyclones","text":"","code":"library(StormR)"},{"path":[]},{"path":"/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Analyzing the Behaviour of Wind Generated by Tropical\n    Storms and Cyclones","text":"welcome contribute StormR package. Just fork project create pull request changes review soon possible.","code":""},{"path":"/index.html","id":"reporting-issues","dir":"","previous_headings":"","what":"Reporting issues","title":"Analyzing the Behaviour of Wind Generated by Tropical\n    Storms and Cyclones","text":"Issues can reported . Simply choose appropriate template fill requested information.","code":""},{"path":"/index.html","id":"seeking-help","dir":"","previous_headings":"","what":"Seeking help","title":"Analyzing the Behaviour of Wind Generated by Tropical\n    Storms and Cyclones","text":"need help StormR package, please open new discussion Q&section github. best answer questions. users also welcome help .","code":""},{"path":"/index.html","id":"funding","dir":"","previous_headings":"","what":"Funding","title":"Analyzing the Behaviour of Wind Generated by Tropical\n    Storms and Cyclones","text":"work supported Hermon Slade Foundation, grant HSF 19105.","code":""},{"path":"/reference/Storm-class.html","id":null,"dir":"Reference","previous_headings":"","what":"storm  object — storm-class","title":"storm  object — storm-class","text":"Gather needed informations model single storm","code":""},{"path":"/reference/Storm-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"storm  object — storm-class","text":"storm object. name, character. season, numeric. sshs, numeric. obs, numeric. obs., data.frame.","code":""},{"path":"/reference/Storm-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"storm  object — storm-class","text":"name character. Name storm season numeric. Cyclonic season storm occured sshs numeric. Maximum category reached Saffir Simpson Hurricane Scale obs numeric vector. Indices observations within location interest extented corresponding buffer (See stormsList class) obs.data.frame. Contains observations available. observation made several fields : iso.time, Date hours observations (UTC) lon, Longitude coordinate (Eastern degree) lat, Latitude coordinate (Northern degree) msw, Maximum Sustained Wind (m/s) sshs, Category Saffir Simpson Hurricane Scale following field mandatory highly recommended rmw, Radius Maximum Wind (km) Also, following fields mandatory perform Holland Boose models (See Details) pres, Pressure center (pa) poci, Pressure Outermost Closed Isobar (pa)","code":""},{"path":"/reference/StormsDataset-class.html","id":null,"dir":"Reference","previous_headings":"","what":"stormsDataset — stormsDataset-class","title":"stormsDataset — stormsDataset-class","text":"Choose database use within package's functions","code":""},{"path":"/reference/StormsDataset-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"stormsDataset — stormsDataset-class","text":"fields input must provide least 6 mandatory fields (11) order benefit functionalities package: field names: dimension contains names storms netcdf database field seasons: dimension contains cyclonic seasons storms netcdf database field isoTime: dimension contains ISO times (3 6 hourly) observations storms database field lon: dimension contains longitude coordinates observations storms netcdf database field lat: dimension contains latitude coordinates observations storms netcdf database field msw: dimension contains maximum sustained wind speed observations storms netcdf database following fields optional highly recommended: field basin: dimension contains basin location storms netcdf database. Used filter storms netcdf database field rmw: dimension contains radius maximum wind speed observations storms netcdf database (See spatialBehaviour, temporalBehaviour) field sshs: dimension contains Saffir Simpson Hurricane Scale index observations storms netcdf database Finally following fields optional mandatory perform Holland model (See spatialBehaviour, temporalBehaviour) field pressure: dimension contains pressure eye observations storms netcdf database field poci: dimension contains Pressure Outermost Closed Isobar observations storms nectdf database Default value set according relevant dimensions IBTrACS databases: fields = c(basin = \"basin\", names = \"name\", seasons = \"season\", isoTime = \"iso_time\", lon = \"usa_lon\", lat = \"usa_lat\", msw = \"usa_wind\", rmw = \"usa_rmw\", pressure = \"usa_pres\", poci = \"usa_poci\", sshs = \"usa_sshs\")","code":""},{"path":"/reference/StormsDataset-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"stormsDataset — stormsDataset-class","text":"filename character. Name database load. Must netcdf file fields named character vector. Dictionary provides name dimensions extract netcdf database (See Details) basin character. Basin name filter database within boundaries. must either \"NA\": North Atlantic \"SA\": South Atlantic \"EP\": Eastern North Pacific \"WP\": Western North Pacific \"SP\": South Pacific \"SI\": South India \"NI\": North India \"None\": particular basin seasons numeric vector. Range calendar years filter storms. cyclones formed one year dissipated following year, latter used database list 6 10 slots depending fields input. slot either 1D array dimension (number storms) names seasons fields, 2D array dimension (Maximum number observations:number storms), remaining fields isoTime, lon, lat, msw, rmw, pressure, poci, sshs","code":""},{"path":"/reference/StormsList-class.html","id":null,"dir":"Reference","previous_headings":"","what":"stormsList object — stormsList-class","title":"stormsList object — stormsList-class","text":"Gather needed informations model set storms","code":""},{"path":"/reference/StormsList-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"stormsList object — stormsList-class","text":"stormsList object. data, list. buffer, numeric. spatialLoi, sf. spatialLoiBuffer, sf.","code":""},{"path":"/reference/StormsList-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"stormsList object — stormsList-class","text":"data list storm (See storm class) buffer numeric. Buffer used extent spatialLoi (km) spatialLoi sf object. Represents location interest. Projection EPSG:4326 spatialLoiBuffer sf object. Buffer extension spatialLoi","code":""},{"path":"/reference/defStormsDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating a stormsDataset object — defStormsDataset","title":"Creating a stormsDataset object — defStormsDataset","text":"defStormsDataset() function creates stormsDataset object NetCDF file. essential first step stormR functions can used.","code":""},{"path":"/reference/defStormsDataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creating a stormsDataset object — defStormsDataset","text":"","code":"defStormsDataset(   filename = system.file(\"extdata\", \"test_dataset.nc\", package = \"StormR\"),   fields = c(names = \"name\", seasons = \"season\", isoTime = \"iso_time\", lon = \"usa_lon\",     lat = \"usa_lat\", msw = \"usa_wind\", basin = \"basin\", sshs = \"usa_sshs\", rmw =     \"usa_rmw\", pressure = \"usa_pres\", poci = \"usa_poci\"),   basin = NULL,   seasons = c(1980, as.numeric(format(Sys.time(), \"%Y\"))),   unitConversion = c(msw = \"knt2ms\", rmw = \"nm2km\", pressure = \"mb2pa\", poci = \"mb2pa\"),   verbose = 1 )"},{"path":"/reference/defStormsDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating a stormsDataset object — defStormsDataset","text":"filename character. Name NetCDF (.nc) file. Default test_dataset.nc file located inst/extdata repository directory (accessible system.file(\"extdata\", \"test_dataset.nc\", package = \"StormR\")). test dataset extracted IBTrACS.SP.v04r00.nc file provides tropical cyclones occurred around Vanuatu 2015 2016 around New Caledonia 2020 2021. fields named character vector. argument allows specify corresponding variable names input NetCDF file field output stormsDataset. default, corresponding variable names set import data NetCDF file IBTrACS database (Knapp et al., 2010). Corresponding variable names following fields (mandatory fields) can (recommended optional fields) provided: \"names\", names storms (mandatory), \"seasons\", years observations (mandatory), \"isoTime\", date time observations (mandatory), \"lon\", longitude observations (mandatory), \"lat\", latitude observations (mandatory), \"msw\", maximum sustained wind speed (mandatory), \"basin\", name area storm originated (recommended), \"rmw\", radius maximum winds: distance centre storm band strongest winds (recommended), \"pressure\", central pressure (recommended), \"poci\", pressure last closed isobar (recommended), \"sshs\", Saffir-Simpson hurricane wind scale rating based msw (optional). basin character. basin field provided, storm track data extracted named basin. default basin=NULL, meaning storms irrespective basin originated extracted. Seven basins can used filter data set: \"NA\", North Atlantic basin, \"SA\", South Atlantic basin, \"EP\", Eastern North Pacific basin, \"WP\", Western North Pacific basin, \"SP\", South Pacific basin, \"SI\", South India basin, \"NI\", North India basin. seasons numeric vector. Seasons occurrence storms (e.g., c(2020,2022)). Southern Hemisphere, cyclone season extends across two consecutive years. Therefore, capture 2021 2022 cyclone season years specified, cyclones assigned year originated . default storms occurring since 1980 extracted. unitConversion named character vector. StormR functions use metric system (international system units), therefore msw provided \\(m.s^{-1}\\), rmw \\(km\\), pressure poci \\(Pa\\). default unitConversion=c(msw = \"knt2ms\", rmw = \"nm2km\", pressure = \"mb2pa\", poci = \"mb2pa\") meet requirements importing NetCDF file IBTrACS database. argument mandatory even conversion needed. conversion needed use \"None\" corresponding fields. following unit conversions implemented: msw, \"knt2ms\", convert knot meter per second (default setting), \"kmh2ms\", convert kilometre per hour meter per second, \"mph2ms\", convert miles per hour meter per second, \"None\", conversion needed. rmw, \"nm_to_ms\"convert nautical miles kilometre (default setting), \"None\"conversion needed. pressure poci, \"mb2pa\", convert  millibar Pascal  (default setting), \"b2pa\", convert bar Pascal, \"atm2pa\", convert  atmosphere Pascal, \"psi2pa\", convert  psi Pascal, \"None\", conversion needed. verbose numeric. Whether function display (= 1) (= 0) information processes.","code":""},{"path":"/reference/defStormsDataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creating a stormsDataset object — defStormsDataset","text":"defStormsDataset() function returns stormsDataset object.","code":""},{"path":"/reference/defStormsDataset.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Creating a stormsDataset object — defStormsDataset","text":"Knapp, K. R., Kruk, M. C., Levinson, D. H., Diamond, H. J., & Neumann, C. J. (2010). International Best Track Archive Climate Stewardship (IBTrACS). Bulletin American Meteorological Society, 91(3), Article 3. https://doi.org/10.1175/2009bams2755.1","code":""},{"path":"/reference/defStormsDataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creating a stormsDataset object — defStormsDataset","text":"","code":"# Creating a `stormsDataset` object with storms between 2010 and 2015 # in the South Pacific using the NetCDF provided with the package SP_2015_2020 <- defStormsDataset(seasons = c(2010, 2015)) #> Warning: No basin argument specified. StormR will work as expected #>              but cannot use basin filtering for speed-up when collecting data #> === Loading data  === #> Open database... /home/runner/work/_temp/Library/StormR/extdata/test_dataset.nc opened #> Collecting data ... #> === DONE === str(SP_2015_2020) #> Formal class 'stormsDataset' [package \"StormR\"] with 5 slots #>   ..@ filename: chr \"/home/runner/work/_temp/Library/StormR/extdata/test_dataset.nc\" #>   ..@ fields  : Named chr [1:11] \"name\" \"season\" \"iso_time\" \"usa_lon\" ... #>   .. ..- attr(*, \"names\")= chr [1:11] \"names\" \"seasons\" \"isoTime\" \"lon\" ... #>   ..@ basin   : chr \"None\" #>   ..@ seasons : Named num [1:2] 2015 2015 #>   .. ..- attr(*, \"names\")= chr [1:2] \"min\" \"max\" #>   ..@ database:List of 10 #>   .. ..$ names    : chr [1:2(1d)] \"PAM\" \"SOLO\" #>   .. ..$ seasons  : num [1:2(1d)] 2015 2015 #>   .. ..$ isotimes : chr [1:360, 1:2] \"2015-03-07 06:00:00\" \"2015-03-07 09:00:00\" \"2015-03-07 12:00:00\" \"2015-03-07 15:00:00\" ... #>   .. ..$ longitude: num [1:360, 1:2] NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ... #>   .. ..$ latitude : num [1:360, 1:2] NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ... #>   .. ..$ msw      : num [1:360, 1:2] NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ... #>   .. ..$ sshs     : num [1:360, 1:2] -5 -5 -5 -5 -5 -5 -5 -5 -5 -5 ... #>   .. ..$ rmw      : num [1:360, 1:2] NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ... #>   .. ..$ pressure : num [1:360, 1:2] NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ... #>   .. ..$ poci     : num [1:360, 1:2] NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ..."},{"path":"/reference/defStormsList.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating a stormsList object — defStormsList","title":"Creating a stormsList object — defStormsList","text":"defStormsList() function extracts storm track data stormsDataset creates stormsList object based specified arguments relating location interest, seasons, names storms.","code":""},{"path":"/reference/defStormsList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creating a stormsList object — defStormsList","text":"","code":"defStormsList(   sds,   loi,   seasons = c(sds@seasons[\"min\"], sds@seasons[\"max\"]),   names = NULL,   maxDist = 300,   removeTD = TRUE,   verbose = 2 )"},{"path":"/reference/defStormsList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating a stormsList object — defStormsList","text":"sds stormsDataset object. loi Location interest. Can defined using, character, country name (e.g., \"Vanuatu\") character, basin name among \"NA\", \"SA\", \"EP\", \"WP\", \"SP\", \"SI\" \"NI\" numeric vector, point coordinate (lon, lat decimal degrees, e.g., c(169.5, -19.2)) sp (SpatialPolygon) sf (simple features) object (e.g., created shapefile) seasons numeric vector. Seasons occurrence storms (e.g., c(2020,2022)). Southern Hemisphere, cyclone season extends across two consecutive years. Therefore, capture 2021 2022 cyclone season years specified, cyclones assigned year originated . default storms sds extracted. names character vector. Names specific storms (capital letters). maxDist numeric. Maximum distance location interest storm track data extracted. Default maxDist set 300 km. removeTD logical. Whether (TRUE) (FALSE) removing tropical depressions (\\(msw < 18   m.s^{-1}\\), considered stormed Saffir-Simpson hurricane wind scale) removed. Default value set TRUE. verbose numeric. Type information function displays. Can : 2, information processes outputs displayed (default value), 1, information processes displayed, 0, nothing displayed.","code":""},{"path":"/reference/defStormsList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creating a stormsList object — defStormsList","text":"defStormsList() function returns stormsList object containing track data storms meeting specified criteria (e.g., name, season, location).","code":""},{"path":"/reference/defStormsList.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creating a stormsList object — defStormsList","text":"available countries loi provided rwolrdxtra package. package provide high resolution vector country boundaries derived Natural Earth data. informations Natural Earth data : http://www.naturalearthdata.com/downloads/10m-cultural-vectors/.","code":""},{"path":"/reference/defStormsList.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Creating a stormsList object — defStormsList","text":"Knapp, K. R., Kruk, M. C., Levinson, D. H., Diamond, H. J., & Neumann, C. J. (2010). International Best Track Archive Climate Stewardship (IBTrACS). Bulletin American Meteorological Society, 91(3), Article 3. doi:10.1175/2009bams2755.1","code":""},{"path":"/reference/defStormsList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creating a stormsList object — defStormsList","text":"","code":"# \\donttest{ #Creating a stormsDataset sds <- defStormsDataset() #> Warning: No basin argument specified. StormR will work as expected #>              but cannot use basin filtering for speed-up when collecting data #> === Loading data  === #> Open database... /home/runner/work/_temp/Library/StormR/extdata/test_dataset.nc opened #> Collecting data ... #> === DONE ===  #Getting data using country names vanuatu.st <- defStormsList(sds = sds, loi = \"Vanuatu\") #> === Storms processing ... === #>  #> -> Making buffer: Done #> -> Searching storms from 2015 to 2021 ... #>    -> Identifying Storms: 9 potential candidates... #> -> Gathering storm(s) ...  #>    |                                                                               |                                                                      |   0%   |                                                                               |=========                                                             |  12%   |                                                                               |==================                                                    |  25%   |                                                                               |==========================                                            |  38%   |                                                                               |===================================                                   |  50%   |                                                                               |============================================                          |  62%   |                                                                               |====================================================                  |  75%   |                                                                               |=============================================================         |  88%   |                                                                               |======================================================================| 100% #>  #> === DONE with run time 4.79883 sec === #>  #> SUMMARY: #> (*) LOI: Vanuatu  #> (*) Buffer size: 300 km #> (*) Remove Tropical Depressions (< 18 m/s in sshs): yes #> (*) Number of storms: 7  #>         Name - Tropical season - SSHS - Number of observation within buffer: #>         PAM - 2015 - 5 - 20  #>         SOLO - 2015 - 0 - 4  #>         ULA - 2016 - 4 - 12  #>         WINSTON - 2016 - 5 - 22  #>         ZENA - 2016 - 2 - 8  #>         UESI - 2020 - 1 - 5  #>         LUCAS - 2021 - 1 - 9  #>   #Getting data using a specific point location pt <- c(169, -19) pam.pt <- defStormsList(sds = sds, loi = pt, names = \"PAM\") #> === Storms processing ... === #>  #> -> Making buffer: Done #> -> Searching for PAM storm ... #>    -> Identifying Storms: Done #> -> Gathering storm(s) ...  #>  #> === DONE with run time 0.03682923 sec === #>  #> SUMMARY: #> (*) LOI: 169 -19 lon-lat #> (*) Buffer size: 300 km #> (*) Remove Tropical Depressions (< 18 m/s in sshs): yes #> (*) Number of storms: 1  #>         Name - Tropical season - SSHS - Number of observation within buffer: #>         PAM - 2015 - 5 - 8  #>   #Getting data using country and storm names niran.nc <- defStormsList(sds = sds, loi = \"New Caledonia\", names = c(\"NIRAN\")) #> === Storms processing ... === #>  #> -> Making buffer: Done #> -> Searching for NIRAN storm ... #>    -> Identifying Storms: Done #> -> Gathering storm(s) ...  #>  #> === DONE with run time 0.4835753 sec === #>  #> SUMMARY: #> (*) LOI: New Caledonia  #> (*) Buffer size: 300 km #> (*) Remove Tropical Depressions (< 18 m/s in sshs): yes #> (*) Number of storms: 1  #>         Name - Tropical season - SSHS - Number of observation within buffer: #>         NIRAN - 2021 - 5 - 10  #>   #Getting data using a user defined spatial polygon poly <- cbind(c(135, 290, 290, 135, 135),c(-60, -60, 0, 0, -60)) sp <- sf::st_polygon(list(poly)) sp <- sf::st_sfc(sp, crs = 4326) sp <- sf::st_as_sf(sp) sts_sp <- defStormsList(sds = sds, loi = sp) #> === Storms processing ... === #>  #> -> Making buffer: Done #> -> Searching storms from 2015 to 2021 ... #>    -> Identifying Storms: 9 potential candidates... #> -> Gathering storm(s) ...  #>    |                                                                               |                                                                      |   0%   |                                                                               |=========                                                             |  12%   |                                                                               |==================                                                    |  25%   |                                                                               |==========================                                            |  38%   |                                                                               |===================================                                   |  50%   |                                                                               |============================================                          |  62%   |                                                                               |====================================================                  |  75%   |                                                                               |=============================================================         |  88%   |                                                                               |======================================================================| 100% #>  #> === DONE with run time 0.1423538 sec === #>  #> SUMMARY: #> (*) LOI: sf object (use getLOI function for further informations(*) Buffer size: 300 km #> (*) Remove Tropical Depressions (< 18 m/s in sshs): yes #> (*) Number of storms: 9  #>         Name - Tropical season - SSHS - Number of observation within buffer: #>         PAM - 2015 - 5 - 57  #>         SOLO - 2015 - 0 - 29  #>         ULA - 2016 - 4 - 119  #>         WINSTON - 2016 - 5 - 151  #>         ZENA - 2016 - 2 - 21  #>         UESI - 2020 - 1 - 67  #>         GRETEL - 2020 - 1 - 27  #>         LUCAS - 2021 - 1 - 49  #>         NIRAN - 2021 - 5 - 65  #>   # }"},{"path":"/reference/eezNC.html","id":null,"dir":"Reference","previous_headings":"","what":"EEZ of New Caledonia — eezNC","title":"EEZ of New Caledonia — eezNC","text":"Provide geographic limits eez New Caledonia","code":""},{"path":"/reference/eezNC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EEZ of New Caledonia — eezNC","text":"","code":"eezNC"},{"path":[]},{"path":"/reference/eezNC.html","id":"eeznc","dir":"Reference","previous_headings":"","what":"eezNC","title":"EEZ of New Caledonia — eezNC","text":"sf object","code":""},{"path":"/reference/getBuffer-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the buffered location of interest — getBuffer","title":"Getting the buffered location of interest — getBuffer","text":"getBuffer() function returns buffered location interest stormsList object.","code":""},{"path":"/reference/getBuffer-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getting the buffered location of interest — getBuffer","text":"","code":"getBuffer(sts)  # S4 method for stormsList getBuffer(sts)"},{"path":"/reference/getBuffer-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getting the buffered location of interest — getBuffer","text":"sts stormsList","code":""},{"path":"/reference/getBuffer-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the buffered location of interest — getBuffer","text":"sf object.","code":""},{"path":"/reference/getBuffer-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the buffered location of interest — getBuffer","text":"","code":"# \\donttest{ #Creating a stormsDataset sds <- defStormsDataset() #> Warning: No basin argument specified. StormR will work as expected #>              but cannot use basin filtering for speed-up when collecting data #> === Loading data  === #> Open database... /home/runner/work/_temp/Library/StormR/extdata/test_dataset.nc opened #> Collecting data ... #> === DONE ===  #Getting storm track data for all storms near New Caledonia sts <- defStormsList(sds=sds, loi = \"New Caledonia\") #> === Storms processing ... === #>  #> -> Making buffer: Done #> -> Searching storms from 2015 to 2021 ... #>    -> Identifying Storms: 9 potential candidates... #> -> Gathering storm(s) ...  #>    |                                                                               |                                                                      |   0%   |                                                                               |=========                                                             |  12%   |                                                                               |==================                                                    |  25%   |                                                                               |==========================                                            |  38%   |                                                                               |===================================                                   |  50%   |                                                                               |============================================                          |  62%   |                                                                               |====================================================                  |  75%   |                                                                               |=============================================================         |  88%   |                                                                               |======================================================================| 100% #>  #> === DONE with run time 0.5290751 sec === #>  #> SUMMARY: #> (*) LOI: New Caledonia  #> (*) Buffer size: 300 km #> (*) Remove Tropical Depressions (< 18 m/s in sshs): yes #> (*) Number of storms: 7  #>         Name - Tropical season - SSHS - Number of observation within buffer: #>         PAM - 2015 - 5 - 5  #>         SOLO - 2015 - 0 - 15  #>         ULA - 2016 - 4 - 9  #>         UESI - 2020 - 1 - 16  #>         GRETEL - 2020 - 1 - 11  #>         LUCAS - 2021 - 1 - 16  #>         NIRAN - 2021 - 5 - 10  #>   #Getting the buffered location of interest from the sts object buff <- getBuffer(sts) # }"},{"path":"/reference/getBufferSize-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the buffer size — getBufferSize","title":"Getting the buffer size — getBufferSize","text":"getBufferSize() returns buffer size used generate buffered location interest stormsList object.","code":""},{"path":"/reference/getBufferSize-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getting the buffer size — getBufferSize","text":"","code":"getBufferSize(sts)  # S4 method for stormsList getBufferSize(sts)"},{"path":"/reference/getBufferSize-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getting the buffer size — getBufferSize","text":"sts stormsList","code":""},{"path":"/reference/getBufferSize-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the buffer size — getBufferSize","text":"numeric.","code":""},{"path":"/reference/getBufferSize-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the buffer size — getBufferSize","text":"","code":"#Creating a stormsDataset # \\donttest{ sds <- defStormsDataset() #> Warning: No basin argument specified. StormR will work as expected #>              but cannot use basin filtering for speed-up when collecting data #> === Loading data  === #> Open database... /home/runner/work/_temp/Library/StormR/extdata/test_dataset.nc opened #> Collecting data ... #> === DONE ===  #Getting storm track data for all storms near New Caledonia sts <- defStormsList(sds=sds, loi = \"New Caledonia\") #> === Storms processing ... === #>  #> -> Making buffer: Done #> -> Searching storms from 2015 to 2021 ... #>    -> Identifying Storms: 9 potential candidates... #> -> Gathering storm(s) ...  #>    |                                                                               |                                                                      |   0%   |                                                                               |=========                                                             |  12%   |                                                                               |==================                                                    |  25%   |                                                                               |==========================                                            |  38%   |                                                                               |===================================                                   |  50%   |                                                                               |============================================                          |  62%   |                                                                               |====================================================                  |  75%   |                                                                               |=============================================================         |  88%   |                                                                               |======================================================================| 100% #>  #> === DONE with run time 0.5357988 sec === #>  #> SUMMARY: #> (*) LOI: New Caledonia  #> (*) Buffer size: 300 km #> (*) Remove Tropical Depressions (< 18 m/s in sshs): yes #> (*) Number of storms: 7  #>         Name - Tropical season - SSHS - Number of observation within buffer: #>         PAM - 2015 - 5 - 5  #>         SOLO - 2015 - 0 - 15  #>         ULA - 2016 - 4 - 9  #>         UESI - 2020 - 1 - 16  #>         GRETEL - 2020 - 1 - 11  #>         LUCAS - 2021 - 1 - 16  #>         NIRAN - 2021 - 5 - 10  #>   #Getting the buffer size from the sts object buffsize <- getBufferSize(sts) # }"},{"path":"/reference/getInObs-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the number of the observations — getInObs","title":"Getting the number of the observations — getInObs","text":"getInObs() function returns number observations given storm stormsList object.","code":""},{"path":"/reference/getInObs-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getting the number of the observations — getInObs","text":"","code":"getInObs(s, ...)  # S4 method for stormsList getInObs(s, name, season = NULL)  # S4 method for storm getInObs(s)"},{"path":"/reference/getInObs-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getting the number of the observations — getInObs","text":"s storm stormsList object. ... extra argument stormsList name character. Name storm capital letters. season numeric. Cyclonic season storm. Required several storm s object name. Default value set NULL","code":""},{"path":"/reference/getInObs-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the number of the observations — getInObs","text":"Numeric vector.","code":""},{"path":"/reference/getInObs-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the number of the observations — getInObs","text":"","code":"#Creating a stormsDataset # \\donttest{ sds <- defStormsDataset() #> Warning: No basin argument specified. StormR will work as expected #>              but cannot use basin filtering for speed-up when collecting data #> === Loading data  === #> Open database... /home/runner/work/_temp/Library/StormR/extdata/test_dataset.nc opened #> Collecting data ... #> === DONE ===  #Getting storm track data for all storms near New Caledonia sts <- defStormsList(sds=sds, loi = \"New Caledonia\") #> === Storms processing ... === #>  #> -> Making buffer: Done #> -> Searching storms from 2015 to 2021 ... #>    -> Identifying Storms: 9 potential candidates... #> -> Gathering storm(s) ...  #>    |                                                                               |                                                                      |   0%   |                                                                               |=========                                                             |  12%   |                                                                               |==================                                                    |  25%   |                                                                               |==========================                                            |  38%   |                                                                               |===================================                                   |  50%   |                                                                               |============================================                          |  62%   |                                                                               |====================================================                  |  75%   |                                                                               |=============================================================         |  88%   |                                                                               |======================================================================| 100% #>  #> === DONE with run time 0.5247085 sec === #>  #> SUMMARY: #> (*) LOI: New Caledonia  #> (*) Buffer size: 300 km #> (*) Remove Tropical Depressions (< 18 m/s in sshs): yes #> (*) Number of storms: 7  #>         Name - Tropical season - SSHS - Number of observation within buffer: #>         PAM - 2015 - 5 - 5  #>         SOLO - 2015 - 0 - 15  #>         ULA - 2016 - 4 - 9  #>         UESI - 2020 - 1 - 16  #>         GRETEL - 2020 - 1 - 11  #>         LUCAS - 2021 - 1 - 16  #>         NIRAN - 2021 - 5 - 10  #>   #Getting the number of the observation for the tropical cyclone Niran in the sts object getInObs(getStorm(sts, name = \"NIRAN\")) #>  [1] 50 51 52 53 54 55 56 57 58 59 getInObs(sts, name = \"NIRAN\") #>  [1] 50 51 52 53 54 55 56 57 58 59 # }"},{"path":"/reference/getLOI-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the location of interest — getLOI","title":"Getting the location of interest — getLOI","text":"getLOI() functions returns location interest given stormsList.","code":""},{"path":"/reference/getLOI-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getting the location of interest — getLOI","text":"","code":"getLOI(sts)  # S4 method for stormsList getLOI(sts)"},{"path":"/reference/getLOI-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getting the location of interest — getLOI","text":"sts stormsList object","code":""},{"path":"/reference/getLOI-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the location of interest — getLOI","text":"sf object.","code":""},{"path":"/reference/getLOI-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the location of interest — getLOI","text":"","code":"#Creating a stormsDataset # \\donttest{ sds <- defStormsDataset() #> Warning: No basin argument specified. StormR will work as expected #>              but cannot use basin filtering for speed-up when collecting data #> === Loading data  === #> Open database... /home/runner/work/_temp/Library/StormR/extdata/test_dataset.nc opened #> Collecting data ... #> === DONE ===  #Getting storm track data for all storms near New Caledonia sts <- defStormsList(sds=sds, loi = \"New Caledonia\") #> === Storms processing ... === #>  #> -> Making buffer: Done #> -> Searching storms from 2015 to 2021 ... #>    -> Identifying Storms: 9 potential candidates... #> -> Gathering storm(s) ...  #>    |                                                                               |                                                                      |   0%   |                                                                               |=========                                                             |  12%   |                                                                               |==================                                                    |  25%   |                                                                               |==========================                                            |  38%   |                                                                               |===================================                                   |  50%   |                                                                               |============================================                          |  62%   |                                                                               |====================================================                  |  75%   |                                                                               |=============================================================         |  88%   |                                                                               |======================================================================| 100% #>  #> === DONE with run time 0.5399549 sec === #>  #> SUMMARY: #> (*) LOI: New Caledonia  #> (*) Buffer size: 300 km #> (*) Remove Tropical Depressions (< 18 m/s in sshs): yes #> (*) Number of storms: 7  #>         Name - Tropical season - SSHS - Number of observation within buffer: #>         PAM - 2015 - 5 - 5  #>         SOLO - 2015 - 0 - 15  #>         ULA - 2016 - 4 - 9  #>         UESI - 2020 - 1 - 16  #>         GRETEL - 2020 - 1 - 11  #>         LUCAS - 2021 - 1 - 16  #>         NIRAN - 2021 - 5 - 10  #>   #Getting the location of interest for the sts object loi <- getLOI(sts) # }"},{"path":"/reference/getNames-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the names of the storms — getNames","title":"Getting the names of the storms — getNames","text":"getNames() function returns names storms storm stormsList object.","code":""},{"path":"/reference/getNames-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getting the names of the storms — getNames","text":"","code":"getNames(s)  # S4 method for storm getNames(s)  # S4 method for stormsList getNames(s)"},{"path":"/reference/getNames-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getting the names of the storms — getNames","text":"s storm stormsList object.","code":""},{"path":"/reference/getNames-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the names of the storms — getNames","text":"character vector.","code":""},{"path":"/reference/getNames-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the names of the storms — getNames","text":"","code":"# \\donttest{ #Creating a stormsDataset sds <- defStormsDataset() #> Warning: No basin argument specified. StormR will work as expected #>              but cannot use basin filtering for speed-up when collecting data #> === Loading data  === #> Open database... /home/runner/work/_temp/Library/StormR/extdata/test_dataset.nc opened #> Collecting data ... #> === DONE ===  #Getting storm track data for all storms near New Caledonia sts <- defStormsList(sds=sds, loi = \"New Caledonia\") #> === Storms processing ... === #>  #> -> Making buffer: Done #> -> Searching storms from 2015 to 2021 ... #>    -> Identifying Storms: 9 potential candidates... #> -> Gathering storm(s) ...  #>    |                                                                               |                                                                      |   0%   |                                                                               |=========                                                             |  12%   |                                                                               |==================                                                    |  25%   |                                                                               |==========================                                            |  38%   |                                                                               |===================================                                   |  50%   |                                                                               |============================================                          |  62%   |                                                                               |====================================================                  |  75%   |                                                                               |=============================================================         |  88%   |                                                                               |======================================================================| 100% #>  #> === DONE with run time 0.5270679 sec === #>  #> SUMMARY: #> (*) LOI: New Caledonia  #> (*) Buffer size: 300 km #> (*) Remove Tropical Depressions (< 18 m/s in sshs): yes #> (*) Number of storms: 7  #>         Name - Tropical season - SSHS - Number of observation within buffer: #>         PAM - 2015 - 5 - 5  #>         SOLO - 2015 - 0 - 15  #>         ULA - 2016 - 4 - 9  #>         UESI - 2020 - 1 - 16  #>         GRETEL - 2020 - 1 - 11  #>         LUCAS - 2021 - 1 - 16  #>         NIRAN - 2021 - 5 - 10  #>   #Getting the names of the storms from the sts object getNames(sts) #> [1] \"PAM\"    \"SOLO\"   \"ULA\"    \"UESI\"   \"GRETEL\" \"LUCAS\"  \"NIRAN\"  # }"},{"path":"/reference/getNbObs-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the number of observations — getNbObs","title":"Getting the number of observations — getNbObs","text":"getNbObs() function returns number observations storm storm stormsList object.","code":""},{"path":"/reference/getNbObs-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getting the number of observations — getNbObs","text":"","code":"getNbObs(s, ...)  # S4 method for storm getNbObs(s)  # S4 method for stormsList getNbObs(s, name, season = NULL)"},{"path":"/reference/getNbObs-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getting the number of observations — getNbObs","text":"s storm stormsList object. ... extra arguments stormsList name character. Name storm capital letters. season numeric. Cyclonic season storm. Required several storm s name. Default value set NULL.","code":""},{"path":"/reference/getNbObs-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the number of observations — getNbObs","text":"numeric.","code":""},{"path":"/reference/getNbObs-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the number of observations — getNbObs","text":"","code":"# \\donttest{ #Creating a stormsDataset sds <- defStormsDataset() #> Warning: No basin argument specified. StormR will work as expected #>              but cannot use basin filtering for speed-up when collecting data #> === Loading data  === #> Open database... /home/runner/work/_temp/Library/StormR/extdata/test_dataset.nc opened #> Collecting data ... #> === DONE ===  #Getting storm track data for all storms near New Caledonia sts <- defStormsList(sds=sds, loi = \"New Caledonia\") #> === Storms processing ... === #>  #> -> Making buffer: Done #> -> Searching storms from 2015 to 2021 ... #>    -> Identifying Storms: 9 potential candidates... #> -> Gathering storm(s) ...  #>    |                                                                               |                                                                      |   0%   |                                                                               |=========                                                             |  12%   |                                                                               |==================                                                    |  25%   |                                                                               |==========================                                            |  38%   |                                                                               |===================================                                   |  50%   |                                                                               |============================================                          |  62%   |                                                                               |====================================================                  |  75%   |                                                                               |=============================================================         |  88%   |                                                                               |======================================================================| 100% #>  #> === DONE with run time 0.526401 sec === #>  #> SUMMARY: #> (*) LOI: New Caledonia  #> (*) Buffer size: 300 km #> (*) Remove Tropical Depressions (< 18 m/s in sshs): yes #> (*) Number of storms: 7  #>         Name - Tropical season - SSHS - Number of observation within buffer: #>         PAM - 2015 - 5 - 5  #>         SOLO - 2015 - 0 - 15  #>         ULA - 2016 - 4 - 9  #>         UESI - 2020 - 1 - 16  #>         GRETEL - 2020 - 1 - 11  #>         LUCAS - 2021 - 1 - 16  #>         NIRAN - 2021 - 5 - 10  #>   ##Getting the number of observations for the tropical cyclone Niran in the sts object getNbObs(getStorm(sts, name = \"NIRAN\")) #> [1] 65 getNbObs(sts, name = \"NIRAN\") #> [1] 65 # }"},{"path":"/reference/getNbStorms-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting the number of storm — getNbStorms","title":"Getting the number of storm — getNbStorms","text":"getNbStorms() returns number storm objects given stormsList object.","code":""},{"path":"/reference/getNbStorms-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getting the number of storm — getNbStorms","text":"","code":"getNbStorms(sts)  # S4 method for stormsList getNbStorms(sts)"},{"path":"/reference/getNbStorms-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getting the number of storm — getNbStorms","text":"sts stormsList","code":""},{"path":"/reference/getNbStorms-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting the number of storm — getNbStorms","text":"numeric, number storm objects.","code":""},{"path":"/reference/getNbStorms-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting the number of storm — getNbStorms","text":"","code":"#Creating a stormsDataset # \\donttest{ sds <- defStormsDataset() #> Warning: No basin argument specified. StormR will work as expected #>              but cannot use basin filtering for speed-up when collecting data #> === Loading data  === #> Open database... /home/runner/work/_temp/Library/StormR/extdata/test_dataset.nc opened #> Collecting data ... #> === DONE ===  #Getting storm track data for all storms near New Caledonia sts <- defStormsList(sds=sds, loi = \"New Caledonia\") #> === Storms processing ... === #>  #> -> Making buffer: Done #> -> Searching storms from 2015 to 2021 ... #>    -> Identifying Storms: 9 potential candidates... #> -> Gathering storm(s) ...  #>    |                                                                               |                                                                      |   0%   |                                                                               |=========                                                             |  12%   |                                                                               |==================                                                    |  25%   |                                                                               |==========================                                            |  38%   |                                                                               |===================================                                   |  50%   |                                                                               |============================================                          |  62%   |                                                                               |====================================================                  |  75%   |                                                                               |=============================================================         |  88%   |                                                                               |======================================================================| 100% #>  #> === DONE with run time 0.5398538 sec === #>  #> SUMMARY: #> (*) LOI: New Caledonia  #> (*) Buffer size: 300 km #> (*) Remove Tropical Depressions (< 18 m/s in sshs): yes #> (*) Number of storms: 7  #>         Name - Tropical season - SSHS - Number of observation within buffer: #>         PAM - 2015 - 5 - 5  #>         SOLO - 2015 - 0 - 15  #>         ULA - 2016 - 4 - 9  #>         UESI - 2020 - 1 - 16  #>         GRETEL - 2020 - 1 - 11  #>         LUCAS - 2021 - 1 - 16  #>         NIRAN - 2021 - 5 - 10  #>   #Getting the number of storms in the sts object getNbStorms(sts) #> [1] 7 # }"},{"path":"/reference/getObs-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting observations — getObs","title":"Getting observations — getObs","text":"getObs() function returns observed track data storm storm stormsList object.","code":""},{"path":"/reference/getObs-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getting observations — getObs","text":"","code":"getObs(s, ...)  # S4 method for stormsList getObs(s, name, season = NULL)  # S4 method for storm getObs(s)"},{"path":"/reference/getObs-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getting observations — getObs","text":"s storm stormsList object ... extra argument stormsList name character. Name storm capital letters. season numeric. Cyclonic season storm. Required several storm s object name. Default value set NULL.","code":""},{"path":"/reference/getObs-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting observations — getObs","text":"data.frame.","code":""},{"path":"/reference/getObs-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting observations — getObs","text":"","code":"# \\donttest{ #Creating a stormsDataset sds <- defStormsDataset() #> Warning: No basin argument specified. StormR will work as expected #>              but cannot use basin filtering for speed-up when collecting data #> === Loading data  === #> Open database... /home/runner/work/_temp/Library/StormR/extdata/test_dataset.nc opened #> Collecting data ... #> === DONE ===  #Getting storm track data for all storms near New Caledonia sts <- defStormsList(sds=sds, loi = \"New Caledonia\") #> === Storms processing ... === #>  #> -> Making buffer: Done #> -> Searching storms from 2015 to 2021 ... #>    -> Identifying Storms: 9 potential candidates... #> -> Gathering storm(s) ...  #>    |                                                                               |                                                                      |   0%   |                                                                               |=========                                                             |  12%   |                                                                               |==================                                                    |  25%   |                                                                               |==========================                                            |  38%   |                                                                               |===================================                                   |  50%   |                                                                               |============================================                          |  62%   |                                                                               |====================================================                  |  75%   |                                                                               |=============================================================         |  88%   |                                                                               |======================================================================| 100% #>  #> === DONE with run time 0.5267348 sec === #>  #> SUMMARY: #> (*) LOI: New Caledonia  #> (*) Buffer size: 300 km #> (*) Remove Tropical Depressions (< 18 m/s in sshs): yes #> (*) Number of storms: 7  #>         Name - Tropical season - SSHS - Number of observation within buffer: #>         PAM - 2015 - 5 - 5  #>         SOLO - 2015 - 0 - 15  #>         ULA - 2016 - 4 - 9  #>         UESI - 2020 - 1 - 16  #>         GRETEL - 2020 - 1 - 11  #>         LUCAS - 2021 - 1 - 16  #>         NIRAN - 2021 - 5 - 10  #>   #Getting the observed track data for the tropical #cyclone Niran in the sts object getObs(getStorm(sts, name = \"NIRAN\")) #>               iso.time      lon       lat msw sshs rmw   pres   poci #> 1  2021-02-27 06:00:00 150.0000 -15.70000  10   -3  74 100000 100500 #> 2  2021-02-27 09:00:00 149.6901 -15.84261  10   -3  74 100100 100500 #> 3  2021-02-27 12:00:00 149.4000 -16.00000  10   -3  74 100200 100500 #> 4  2021-02-27 15:00:00 149.1424 -16.18494  10   -3  74 100200 100400 #> 5  2021-02-27 18:00:00 148.9000 -16.40000  10   -3  74 100200 100300 #> 6  2021-02-27 21:00:00 148.6201 -16.67255  11   -3  74 100100 100300 #> 7  2021-02-28 00:00:00 148.4000 -16.90000  13   -1  74 100000 100300 #> 8  2021-02-28 03:00:00 148.3199 -16.97994  14   -1  74  99800 100200 #> 9  2021-02-28 06:00:00 148.3000 -17.00000  15   -1  74  99600 100100 #> 10 2021-02-28 09:00:00 148.2800 -17.04245  16   -1  74  99600 100200 #> 11 2021-02-28 12:00:00 148.2000 -17.10000  18    0  74  99600 100400 #> 12 2021-02-28 15:00:00 147.9726 -17.20757  16   -1  74  99600 100400 #> 13 2021-02-28 18:00:00 147.7000 -17.30000  15   -1  74  99600 100400 #> 14 2021-02-28 21:00:00 147.4850 -17.35247  16   -1  74  99600 100400 #> 15 2021-03-01 00:00:00 147.3000 -17.30000  18    0  74  99600 100400 #> 16 2021-03-01 03:00:00 147.1274 -17.10249  19    0  74  99400 100200 #> 17 2021-03-01 06:00:00 147.0000 -16.80000  21    0  74  99200 100000 #> 18 2021-03-01 09:00:00 146.8974 -16.45746  21    0  69  99300 100100 #> 19 2021-03-01 12:00:00 146.9000 -16.10000  21    0  65  99400 100200 #> 20 2021-03-01 15:00:00 147.0627 -15.77754  22    0  50  98900 100200 #> 21 2021-03-01 18:00:00 147.3000 -15.50000  23    0  37  98400 100200 #> 22 2021-03-01 21:00:00 147.5075 -15.27000  23    0  41  98900 100200 #> 23 2021-03-02 00:00:00 147.7000 -15.10000  23    0  46  99400 100300 #> 24 2021-03-02 03:00:00 147.8725 -14.97750  26    0  46  99100 100300 #> 25 2021-03-02 06:00:00 148.0000 -14.90000  28    0  46  98800 100300 #> 26 2021-03-02 09:00:00 148.1025 -14.84246  28    0  50  98700 100300 #> 27 2021-03-02 12:00:00 148.1000 -14.80000  28    0  56  98600 100400 #> 28 2021-03-02 15:00:00 147.8850 -14.73510  28    0  56  98400 100200 #> 29 2021-03-02 18:00:00 147.7000 -14.70000  28    0  56  98300 100100 #> 30 2021-03-02 21:00:00 147.8275 -14.74254  29    0  56  98300 100200 #> 31 2021-03-03 00:00:00 148.0000 -14.80000  31    0  56  98300 100400 #> 32 2021-03-03 03:00:00 147.9650 -14.79999  33    1  46  97600 100400 #> 33 2021-03-03 06:00:00 147.9000 -14.80000  36    1  37  97000 100400 #> 34 2021-03-03 09:00:00 147.9275 -14.84999  33    1  37  97700 100400 #> 35 2021-03-03 12:00:00 148.0000 -14.90000  31    0  37  98400 100500 #> 36 2021-03-03 15:00:00 148.0776 -14.88498  36    1  30  97500 100300 #> 37 2021-03-03 18:00:00 148.2000 -14.90000  41    1  22  96600 100100 #> 38 2021-03-03 21:00:00 148.3475 -15.02737  42    1  24  96400 100100 #> 39 2021-03-04 00:00:00 148.6000 -15.20000  44    2  28  96200 100100 #> 40 2021-03-04 03:00:00 149.0049 -15.36504  46    2  24  95800 100000 #> 41 2021-03-04 06:00:00 149.5000 -15.50000  49    2  22  95400 100000 #> 42 2021-03-04 09:00:00 149.9179 -15.54925  47    2  22  95700 100100 #> 43 2021-03-04 12:00:00 150.5000 -15.60000  46    2  22  96100 100200 #> 44 2021-03-04 15:00:00 151.4181 -15.69779  47    2  22  95900 100200 #> 45 2021-03-04 18:00:00 152.5000 -15.90000  49    2  22  95800 100200 #> 46 2021-03-04 21:00:00 153.5280 -16.23189  54    3  22  95000 100200 #> 47 2021-03-05 00:00:00 154.6000 -16.70000  59    4  22  94200 100200 #> 48 2021-03-05 03:00:00 155.7347 -17.29210  63    4  15  93400 100000 #> 49 2021-03-05 06:00:00 156.9000 -17.90000  67    4   9  92600  99900 #> 50 2021-03-05 09:00:00 158.0513 -18.35680  69    4   9  92100 100000 #> 51 2021-03-05 12:00:00 159.2000 -18.80000  72    5   9  91700 100100 #> 52 2021-03-05 15:00:00 160.3366 -19.29653  69    4   9  92100 100000 #> 53 2021-03-05 18:00:00 161.5000 -19.90000  67    4   9  92600  99900 #> 54 2021-03-05 21:00:00 162.7202 -20.67662  62    4   9  93500  99900 #> 55 2021-03-06 00:00:00 164.0000 -21.50000  57    3   9  94500  99900 #> 56 2021-03-06 03:00:00 165.3370 -22.19925  55    3   9  94600  99900 #> 57 2021-03-06 06:00:00 166.7000 -22.90000  54    3   9  94800 100000 #> 58 2021-03-06 09:00:00 167.9782 -23.67420  50    3   9  95300 100000 #> 59 2021-03-06 12:00:00 169.4000 -24.50000  46    2   9  95800 100000 #> 60 2021-03-06 15:00:00 171.2547 -25.39050  40    1   9  96700 100100 #> 61 2021-03-06 18:00:00 173.1000 -26.20000  33    1   9  97600 100200 #> 62 2021-03-06 21:00:00 174.4512 -26.75260  31    0  59  98200 100200 #> 63 2021-03-07 00:00:00 175.7000 -27.30000  28    0 111  98800 100300 #> 64 2021-03-07 03:00:00 177.1642 -28.04104  24    0 111  98900 100300 #> 65 2021-03-07 06:00:00 178.8000 -28.90000  21   -2 111  99100 100300 getObs(sts, name = \"NIRAN\") #>               iso.time      lon       lat msw sshs rmw   pres   poci #> 1  2021-02-27 06:00:00 150.0000 -15.70000  10   -3  74 100000 100500 #> 2  2021-02-27 09:00:00 149.6901 -15.84261  10   -3  74 100100 100500 #> 3  2021-02-27 12:00:00 149.4000 -16.00000  10   -3  74 100200 100500 #> 4  2021-02-27 15:00:00 149.1424 -16.18494  10   -3  74 100200 100400 #> 5  2021-02-27 18:00:00 148.9000 -16.40000  10   -3  74 100200 100300 #> 6  2021-02-27 21:00:00 148.6201 -16.67255  11   -3  74 100100 100300 #> 7  2021-02-28 00:00:00 148.4000 -16.90000  13   -1  74 100000 100300 #> 8  2021-02-28 03:00:00 148.3199 -16.97994  14   -1  74  99800 100200 #> 9  2021-02-28 06:00:00 148.3000 -17.00000  15   -1  74  99600 100100 #> 10 2021-02-28 09:00:00 148.2800 -17.04245  16   -1  74  99600 100200 #> 11 2021-02-28 12:00:00 148.2000 -17.10000  18    0  74  99600 100400 #> 12 2021-02-28 15:00:00 147.9726 -17.20757  16   -1  74  99600 100400 #> 13 2021-02-28 18:00:00 147.7000 -17.30000  15   -1  74  99600 100400 #> 14 2021-02-28 21:00:00 147.4850 -17.35247  16   -1  74  99600 100400 #> 15 2021-03-01 00:00:00 147.3000 -17.30000  18    0  74  99600 100400 #> 16 2021-03-01 03:00:00 147.1274 -17.10249  19    0  74  99400 100200 #> 17 2021-03-01 06:00:00 147.0000 -16.80000  21    0  74  99200 100000 #> 18 2021-03-01 09:00:00 146.8974 -16.45746  21    0  69  99300 100100 #> 19 2021-03-01 12:00:00 146.9000 -16.10000  21    0  65  99400 100200 #> 20 2021-03-01 15:00:00 147.0627 -15.77754  22    0  50  98900 100200 #> 21 2021-03-01 18:00:00 147.3000 -15.50000  23    0  37  98400 100200 #> 22 2021-03-01 21:00:00 147.5075 -15.27000  23    0  41  98900 100200 #> 23 2021-03-02 00:00:00 147.7000 -15.10000  23    0  46  99400 100300 #> 24 2021-03-02 03:00:00 147.8725 -14.97750  26    0  46  99100 100300 #> 25 2021-03-02 06:00:00 148.0000 -14.90000  28    0  46  98800 100300 #> 26 2021-03-02 09:00:00 148.1025 -14.84246  28    0  50  98700 100300 #> 27 2021-03-02 12:00:00 148.1000 -14.80000  28    0  56  98600 100400 #> 28 2021-03-02 15:00:00 147.8850 -14.73510  28    0  56  98400 100200 #> 29 2021-03-02 18:00:00 147.7000 -14.70000  28    0  56  98300 100100 #> 30 2021-03-02 21:00:00 147.8275 -14.74254  29    0  56  98300 100200 #> 31 2021-03-03 00:00:00 148.0000 -14.80000  31    0  56  98300 100400 #> 32 2021-03-03 03:00:00 147.9650 -14.79999  33    1  46  97600 100400 #> 33 2021-03-03 06:00:00 147.9000 -14.80000  36    1  37  97000 100400 #> 34 2021-03-03 09:00:00 147.9275 -14.84999  33    1  37  97700 100400 #> 35 2021-03-03 12:00:00 148.0000 -14.90000  31    0  37  98400 100500 #> 36 2021-03-03 15:00:00 148.0776 -14.88498  36    1  30  97500 100300 #> 37 2021-03-03 18:00:00 148.2000 -14.90000  41    1  22  96600 100100 #> 38 2021-03-03 21:00:00 148.3475 -15.02737  42    1  24  96400 100100 #> 39 2021-03-04 00:00:00 148.6000 -15.20000  44    2  28  96200 100100 #> 40 2021-03-04 03:00:00 149.0049 -15.36504  46    2  24  95800 100000 #> 41 2021-03-04 06:00:00 149.5000 -15.50000  49    2  22  95400 100000 #> 42 2021-03-04 09:00:00 149.9179 -15.54925  47    2  22  95700 100100 #> 43 2021-03-04 12:00:00 150.5000 -15.60000  46    2  22  96100 100200 #> 44 2021-03-04 15:00:00 151.4181 -15.69779  47    2  22  95900 100200 #> 45 2021-03-04 18:00:00 152.5000 -15.90000  49    2  22  95800 100200 #> 46 2021-03-04 21:00:00 153.5280 -16.23189  54    3  22  95000 100200 #> 47 2021-03-05 00:00:00 154.6000 -16.70000  59    4  22  94200 100200 #> 48 2021-03-05 03:00:00 155.7347 -17.29210  63    4  15  93400 100000 #> 49 2021-03-05 06:00:00 156.9000 -17.90000  67    4   9  92600  99900 #> 50 2021-03-05 09:00:00 158.0513 -18.35680  69    4   9  92100 100000 #> 51 2021-03-05 12:00:00 159.2000 -18.80000  72    5   9  91700 100100 #> 52 2021-03-05 15:00:00 160.3366 -19.29653  69    4   9  92100 100000 #> 53 2021-03-05 18:00:00 161.5000 -19.90000  67    4   9  92600  99900 #> 54 2021-03-05 21:00:00 162.7202 -20.67662  62    4   9  93500  99900 #> 55 2021-03-06 00:00:00 164.0000 -21.50000  57    3   9  94500  99900 #> 56 2021-03-06 03:00:00 165.3370 -22.19925  55    3   9  94600  99900 #> 57 2021-03-06 06:00:00 166.7000 -22.90000  54    3   9  94800 100000 #> 58 2021-03-06 09:00:00 167.9782 -23.67420  50    3   9  95300 100000 #> 59 2021-03-06 12:00:00 169.4000 -24.50000  46    2   9  95800 100000 #> 60 2021-03-06 15:00:00 171.2547 -25.39050  40    1   9  96700 100100 #> 61 2021-03-06 18:00:00 173.1000 -26.20000  33    1   9  97600 100200 #> 62 2021-03-06 21:00:00 174.4512 -26.75260  31    0  59  98200 100200 #> 63 2021-03-07 00:00:00 175.7000 -27.30000  28    0 111  98800 100300 #> 64 2021-03-07 03:00:00 177.1642 -28.04104  24    0 111  98900 100300 #> 65 2021-03-07 06:00:00 178.8000 -28.90000  21   -2 111  99100 100300 # }"},{"path":"/reference/getSSHS-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting maximum Saffir-Simpson hurricane wind scale category — getSSHS","title":"Getting maximum Saffir-Simpson hurricane wind scale category — getSSHS","text":"getSSHS() function return maximum Saffir-Simpson hurricane wind scale category reached storm storm stormsList object.","code":""},{"path":"/reference/getSSHS-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getting maximum Saffir-Simpson hurricane wind scale category — getSSHS","text":"","code":"getSSHS(s)  # S4 method for storm getSSHS(s)  # S4 method for stormsList getSSHS(s)"},{"path":"/reference/getSSHS-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getting maximum Saffir-Simpson hurricane wind scale category — getSSHS","text":"s storm stormsList object.","code":""},{"path":"/reference/getSSHS-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting maximum Saffir-Simpson hurricane wind scale category — getSSHS","text":"numeric vector.","code":""},{"path":"/reference/getSSHS-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting maximum Saffir-Simpson hurricane wind scale category — getSSHS","text":"","code":"# \\donttest{ #Creating a stormsDataset sds <- defStormsDataset() #> Warning: No basin argument specified. StormR will work as expected #>              but cannot use basin filtering for speed-up when collecting data #> === Loading data  === #> Open database... /home/runner/work/_temp/Library/StormR/extdata/test_dataset.nc opened #> Collecting data ... #> === DONE ===  #Getting storm track data for all storms near New Caledonia sts <- defStormsList(sds=sds, loi = \"New Caledonia\") #> === Storms processing ... === #>  #> -> Making buffer: Done #> -> Searching storms from 2015 to 2021 ... #>    -> Identifying Storms: 9 potential candidates... #> -> Gathering storm(s) ...  #>    |                                                                               |                                                                      |   0%   |                                                                               |=========                                                             |  12%   |                                                                               |==================                                                    |  25%   |                                                                               |==========================                                            |  38%   |                                                                               |===================================                                   |  50%   |                                                                               |============================================                          |  62%   |                                                                               |====================================================                  |  75%   |                                                                               |=============================================================         |  88%   |                                                                               |======================================================================| 100% #>  #> === DONE with run time 0.5395908 sec === #>  #> SUMMARY: #> (*) LOI: New Caledonia  #> (*) Buffer size: 300 km #> (*) Remove Tropical Depressions (< 18 m/s in sshs): yes #> (*) Number of storms: 7  #>         Name - Tropical season - SSHS - Number of observation within buffer: #>         PAM - 2015 - 5 - 5  #>         SOLO - 2015 - 0 - 15  #>         ULA - 2016 - 4 - 9  #>         UESI - 2020 - 1 - 16  #>         GRETEL - 2020 - 1 - 11  #>         LUCAS - 2021 - 1 - 16  #>         NIRAN - 2021 - 5 - 10  #>   #Getting maximum Saffir-Simpson hurricane wind scale category #reached by each storm in the sts object getSSHS(sts) #>    PAM   SOLO    ULA   UESI GRETEL  LUCAS  NIRAN  #>      5      0      4      1      1      1      5  # }"},{"path":"/reference/getSeasons-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting cyclonic seasons of the storms — getSeasons","title":"Getting cyclonic seasons of the storms — getSeasons","text":"getSeasons() function  returns cyclonic season storm storm stormsList object.","code":""},{"path":"/reference/getSeasons-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getting cyclonic seasons of the storms — getSeasons","text":"","code":"getSeasons(s)  # S4 method for storm getSeasons(s)  # S4 method for stormsList getSeasons(s)"},{"path":"/reference/getSeasons-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getting cyclonic seasons of the storms — getSeasons","text":"s storm stormsList object.","code":""},{"path":"/reference/getSeasons-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting cyclonic seasons of the storms — getSeasons","text":"numeric vector.","code":""},{"path":"/reference/getSeasons-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting cyclonic seasons of the storms — getSeasons","text":"","code":"# \\donttest{ #Creating a stormsDataset sds <- defStormsDataset() #> Warning: No basin argument specified. StormR will work as expected #>              but cannot use basin filtering for speed-up when collecting data #> === Loading data  === #> Open database... /home/runner/work/_temp/Library/StormR/extdata/test_dataset.nc opened #> Collecting data ... #> === DONE ===  #Getting storm track data for all storms near New Caledonia sts <- defStormsList(sds=sds, loi = \"New Caledonia\") #> === Storms processing ... === #>  #> -> Making buffer: Done #> -> Searching storms from 2015 to 2021 ... #>    -> Identifying Storms: 9 potential candidates... #> -> Gathering storm(s) ...  #>    |                                                                               |                                                                      |   0%   |                                                                               |=========                                                             |  12%   |                                                                               |==================                                                    |  25%   |                                                                               |==========================                                            |  38%   |                                                                               |===================================                                   |  50%   |                                                                               |============================================                          |  62%   |                                                                               |====================================================                  |  75%   |                                                                               |=============================================================         |  88%   |                                                                               |======================================================================| 100% #>  #> === DONE with run time 0.5326111 sec === #>  #> SUMMARY: #> (*) LOI: New Caledonia  #> (*) Buffer size: 300 km #> (*) Remove Tropical Depressions (< 18 m/s in sshs): yes #> (*) Number of storms: 7  #>         Name - Tropical season - SSHS - Number of observation within buffer: #>         PAM - 2015 - 5 - 5  #>         SOLO - 2015 - 0 - 15  #>         ULA - 2016 - 4 - 9  #>         UESI - 2020 - 1 - 16  #>         GRETEL - 2020 - 1 - 11  #>         LUCAS - 2021 - 1 - 16  #>         NIRAN - 2021 - 5 - 10  #>   #Getting the cyclonic seasons of the storms from the sts object getSeasons(sts) #>    PAM   SOLO    ULA   UESI GRETEL  LUCAS  NIRAN  #>   2015   2015   2016   2020   2020   2021   2021  # }"},{"path":"/reference/getStorm-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracting a storm — getStorm","title":"Extracting a storm — getStorm","text":"getStorm() function extracts specific storm object stormsList object.","code":""},{"path":"/reference/getStorm-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracting a storm — getStorm","text":"","code":"getStorm(sts, name, season = NULL)  # S4 method for stormsList getStorm(sts, name, season = NULL)"},{"path":"/reference/getStorm-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracting a storm — getStorm","text":"sts stormsList name character. Name storm extract. season numeric vector. Seasons occurrence storms (e.g., c(2020,2022)). Southern Hemisphere, cyclone season extends across two consecutive years. Therefore, capture 2021 2022 cyclone season years specified, cyclones assigned year #'  originated . default storms occurring since 1980 extracted.","code":""},{"path":"/reference/getStorm-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracting a storm — getStorm","text":"storm object.","code":""},{"path":"/reference/getStorm-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extracting a storm — getStorm","text":"","code":"#Creating a stormsDataset # \\donttest{ sds <- defStormsDataset() #> Warning: No basin argument specified. StormR will work as expected #>              but cannot use basin filtering for speed-up when collecting data #> === Loading data  === #> Open database... /home/runner/work/_temp/Library/StormR/extdata/test_dataset.nc opened #> Collecting data ... #> === DONE ===  #Getting storm track data for all storms near New Caledonia sts <- defStormsList(sds=sds, loi = \"New Caledonia\") #> === Storms processing ... === #>  #> -> Making buffer: Done #> -> Searching storms from 2015 to 2021 ... #>    -> Identifying Storms: 9 potential candidates... #> -> Gathering storm(s) ...  #>    |                                                                               |                                                                      |   0%   |                                                                               |=========                                                             |  12%   |                                                                               |==================                                                    |  25%   |                                                                               |==========================                                            |  38%   |                                                                               |===================================                                   |  50%   |                                                                               |============================================                          |  62%   |                                                                               |====================================================                  |  75%   |                                                                               |=============================================================         |  88%   |                                                                               |======================================================================| 100% #>  #> === DONE with run time 0.53001 sec === #>  #> SUMMARY: #> (*) LOI: New Caledonia  #> (*) Buffer size: 300 km #> (*) Remove Tropical Depressions (< 18 m/s in sshs): yes #> (*) Number of storms: 7  #>         Name - Tropical season - SSHS - Number of observation within buffer: #>         PAM - 2015 - 5 - 5  #>         SOLO - 2015 - 0 - 15  #>         ULA - 2016 - 4 - 9  #>         UESI - 2020 - 1 - 16  #>         GRETEL - 2020 - 1 - 11  #>         LUCAS - 2021 - 1 - 16  #>         NIRAN - 2021 - 5 - 10  #>   #Getting `storm` for the tropical cyclone Niran st <- getStorm(sts, name = \"NIRAN\") # }"},{"path":"/reference/plotBehaviour.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting spatial wind behaviour — plotBehaviour","title":"Plotting spatial wind behaviour — plotBehaviour","text":"plotBehaviour() function allows plotting spatial statistics generated using spatialBehaviour() function stored SpatRaster objects.","code":""},{"path":"/reference/plotBehaviour.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting spatial wind behaviour — plotBehaviour","text":"","code":"plotBehaviour(   sts,   rasterProduct,   colorPalette = NULL,   main = NULL,   xlim = NULL,   ylim = NULL,   labels = FALSE,   by = 8,   pos = 3,   legends = \"topleft\" )"},{"path":"/reference/plotBehaviour.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting spatial wind behaviour — plotBehaviour","text":"sts StormsList object. rasterProduct layer name SpatRaster object. names layers follow following terminology: \"MSW\" \"PDI\", name storm capital letters name statistic separated underscores (e.g., \"PAM_MSW\", \"PAM_PDI\"), duration exposure, name storm capital letters, \"Exposure\", threshold value separated underscores (e.g., \"PAM_Exposure_18\", \"PAM_Exposure_33\", ...). wind profiles, name storm capital letters, \"Speed\" \"Direction\", indices observation separated underscores (e.g., \"PAM_Speed_41\", \"PAM_Direction_41\",...). colorPalette character vector. color palette used plot raster layer. colorPalette=NULL (default setting), default color palette used. main character. Title plot. main=NULL (default setting), default title generated based name layer. xlim numeric vector. x limits plot. ylim numeric vector. y limits plot. labels logical. Whether (TRUE) (FALSE, default setting) add labels name storm indices ISO times observation. numeric. labels=TRUE, defines frequency labels plotted. Default value set 8 corresponds 24h (48h) time interval labelled observations observations made every 3 (6) hours. pos numeric. labels=TRUE, defines position labels, 1 (observation), 2 (left), 3 (, default setting), 4 (right). legends character. Indicates plot legend, \"topright\", \"topleft\" (default setting), \"bottomleft\", \"bottomright\", \"none\" (legend plotted).","code":""},{"path":"/reference/plotBehaviour.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting spatial wind behaviour — plotBehaviour","text":"plot storm track data raster layer.","code":""},{"path":"/reference/plotBehaviour.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting spatial wind behaviour — plotBehaviour","text":"","code":"# \\donttest{ # Creating a stormsDataset sds <- defStormsDataset() #> Warning: No basin argument specified. StormR will work as expected #>              but cannot use basin filtering for speed-up when collecting data #> === Loading data  === #> Open database... /home/runner/work/_temp/Library/StormR/extdata/test_dataset.nc opened #> Collecting data ... #> === DONE ===  # Getting storm track data for tropical cyclone Pam (2015) pam <- defStormsList(sds = sds, loi = \"Vanuatu\", names = \"PAM\") #> === Storms processing ... === #>  #> -> Making buffer: Done #> -> Searching for PAM storm ... #>    -> Identifying Storms: Done #> -> Gathering storm(s) ...  #>  #> === DONE with run time 0.4864233 sec === #>  #> SUMMARY: #> (*) LOI: Vanuatu  #> (*) Buffer size: 300 km #> (*) Remove Tropical Depressions (< 18 m/s in sshs): yes #> (*) Number of storms: 1  #>         Name - Tropical season - SSHS - Number of observation within buffer: #>         PAM - 2015 - 5 - 20  #>   # Plotting maximum sustained wind speed for Pam (2015) near Vanuatu pam.msw <- spatialBehaviour(pam, verbose = 0) plotBehaviour(pam, pam.msw)   # Plotting 2D wind speed profile for Pam (2015) near Vanuatu pam.prof <- spatialBehaviour(pam, product = \"Profiles\", verbose = 0) plotBehaviour(pam, pam.prof$PAM_Speed_37, labels = TRUE, pos = 4)  # }"},{"path":"/reference/plotStorms.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting storm track data — plotStorms","title":"Plotting storm track data — plotStorms","text":"plotStorms() function allows plotting storm track data stored StormsList object.","code":""},{"path":"/reference/plotStorms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting storm track data — plotStorms","text":"","code":"plotStorms(   sts,   names = NULL,   category = NULL,   xlim = NULL,   ylim = NULL,   labels = FALSE,   by = 8,   pos = 3,   legends = \"topleft\",   loi = TRUE )"},{"path":"/reference/plotStorms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting storm track data — plotStorms","text":"sts StormsList object names character vector. Name(s) storm(s) capital letters. names = NULL (default setting), storms plotted. category numeric vector. Category storms plotted Saffir-Simpson hurricane wind scale. Can single category range categories among: -1, tropical depression, 0, tropical storms, 1, category 1 tropical cyclone, 2, category 2 tropical cyclone, 3, category 3 tropical cyclone, 4, category 4 tropical cyclone, 5, category 5 tropical cyclone. category=NULL (default setting), storms plotted. xlim numeric vector. x limits plot. ylim numeric vector. y limits plot. labels logical. Whether (TRUE) (FALSE, default setting) add labels name storm indices ISO times observation. numeric. labels=TRUE, defines frequency labels plotted. Default value set 8 corresponds 24h (48h) time interval labelled observations observations made every 3 (6) hours. pos numeric. labels=TRUE, defines position labels, 1 (observation), 2 (left), 3 (, default setting), 4 (right). legends character. Indicates plot legend, \"topright\", \"topleft\" (default setting), \"bottomleft\", \"bottomright\", \"none\" (legend plotted). loi logical. Whether (TRUE, default setting) (FALSE) plot extent buffered location interest map.","code":""},{"path":"/reference/plotStorms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting storm track data — plotStorms","text":"plot storm track data.","code":""},{"path":"/reference/plotStorms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting storm track data — plotStorms","text":"","code":"#' #Creating a stormsDataset # \\donttest{ dev.off() #> null device  #>           1  sds <- defStormsDataset() #> Warning: No basin argument specified. StormR will work as expected #>              but cannot use basin filtering for speed-up when collecting data #> === Loading data  === #> Open database... /home/runner/work/_temp/Library/StormR/extdata/test_dataset.nc opened #> Collecting data ... #> === DONE ===  # Getting storm track data for tropical cyclone Pam (2015) pam <- defStormsList(sds = sds, loi = \"Vanuatu\", names = \"PAM\") #> === Storms processing ... === #>  #> -> Making buffer: Done #> -> Searching for PAM storm ... #>    -> Identifying Storms: Done #> -> Gathering storm(s) ...  #>  #> === DONE with run time 0.4792356 sec === #>  #> SUMMARY: #> (*) LOI: Vanuatu  #> (*) Buffer size: 300 km #> (*) Remove Tropical Depressions (< 18 m/s in sshs): yes #> (*) Number of storms: 1  #>         Name - Tropical season - SSHS - Number of observation within buffer: #>         PAM - 2015 - 5 - 20  #>   # Plotting Pam over Vanuatu with labels every 24h plotStorms(pam, labels = TRUE)  # Plotting Pam over Vanuatu with labels every 6h on the right side of the observations plotStorms(pam, labels = TRUE, by = 2, pos = 4) # }"},{"path":"/reference/show-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Show a storm/stormsList — show,storm-method","title":"Show a storm/stormsList — show,storm-method","text":"Display storm/stormsList object","code":""},{"path":"/reference/show-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show a storm/stormsList — show,storm-method","text":"","code":"# S4 method for storm show(object)  # S4 method for stormsList show(object)"},{"path":"/reference/show-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show a storm/stormsList — show,storm-method","text":"object storm/stormsList object","code":""},{"path":"/reference/show-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show a storm/stormsList — show,storm-method","text":"NULL, display information object","code":""},{"path":"/reference/show-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show a storm/stormsList — show,storm-method","text":"","code":"# \\donttest{ sds <- defStormsDataset() #> Warning: No basin argument specified. StormR will work as expected #>              but cannot use basin filtering for speed-up when collecting data #> === Loading data  === #> Open database... /home/runner/work/_temp/Library/StormR/extdata/test_dataset.nc opened #> Collecting data ... #> === DONE === sts <- defStormsList(sds = sds, loi = \"New Caledonia\", names = c(\"LUCAS\",\"NIRAN\")) #> === Storms processing ... === #>  #> -> Making buffer: Done #> -> Searching for LUCAS NIRAN storms ... #>    -> Identifying Storms:  #> Warning: numerical expression has 2 elements: only the first used #> Done #> -> Gathering storm(s) ...  #>  #> === DONE with run time 0.4656985 sec === #>  #> SUMMARY: #> (*) LOI: New Caledonia  #> (*) Buffer size: 300 km #> (*) Remove Tropical Depressions (< 18 m/s in sshs): yes #> (*) Number of storms: 1  #>         Name - Tropical season - SSHS - Number of observation within buffer: #>         LUCAS - 2021 - 1 - 16  #>  ## Display information about Niran in sts getStorm(sts, name = \"NIRAN\") #> NULL  ## Display information about sts sts #> ***** stormsList ***** #>  #> Number of storms: 1  #> Storms availables: #>  #> * 1  #> Name: LUCAS  #> Season: 2021  #> Maximum category reached (SSHS): 1  #> Indices of observations within buffer: 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49  #> Observations: #>               iso.time      lon       lat msw sshs rmw   pres   poci #> 1  2021-01-29 00:00:00 144.1000 -14.10000  10   -3  65  99900 100100 #> 2  2021-01-29 03:00:00 144.4675 -13.90499  10   -3  65  99900 100100 #> 3  2021-01-29 06:00:00 144.9000 -13.70000  10   -3  65  99900 100100 #> 4  2021-01-29 09:00:00 145.4351 -13.48506  11   -3  74 100000 100200 #> 5  2021-01-29 12:00:00 146.0000 -13.30000  13   -1  83 100200 100400 #> 6  2021-01-29 15:00:00 146.5149 -13.16990  13   -1  83 100000 100400 #> 7  2021-01-29 18:00:00 147.0000 -13.10000  13   -1  83  99900 100400 #> 8  2021-01-29 21:00:00 147.4500 -13.06984  14   -1  83  99900 100400 #> 9  2021-01-30 00:00:00 147.9000 -13.10000  15   -1  83 100000 100400 #> 10 2021-01-30 03:00:00 148.3850 -13.17740  15   -1  83  99800 100200 #> 11 2021-01-30 06:00:00 148.9000 -13.30000  15   -1  83  99700 100100 #> 12 2021-01-30 09:00:00 149.4201 -13.44227  15   -1  83  99700 100100 #> 13 2021-01-30 12:00:00 150.0000 -13.60000  15   -1  83  99700 100100 #> 14 2021-01-30 15:00:00 150.7148 -13.77276  15   -1  83  99700 100100 #> 15 2021-01-30 18:00:00 151.4000 -13.90000  15   -1  83  99700 100100 #> 16 2021-01-30 21:00:00 151.8877 -13.92217  16   -1  83  99700 100100 #> 17 2021-01-31 00:00:00 152.3000 -13.90000  18    0  83  99800 100100 #> 18 2021-01-31 03:00:00 152.6822 -13.93691  21    0  83  99500 100100 #> 19 2021-01-31 06:00:00 153.2000 -13.90000  23    0  83  99200 100100 #> 20 2021-01-31 09:00:00 154.0037 -13.61992  26    0  78  98900 100100 #> 21 2021-01-31 12:00:00 155.0000 -13.40000  28    0  74  98700 100100 #> 22 2021-01-31 15:00:00 156.1365 -13.54065  28    0  74  98800 100100 #> 23 2021-01-31 18:00:00 157.2000 -13.80000  28    0  74  98900 100100 #> 24 2021-01-31 21:00:00 157.8508 -13.92601  27    0  50  99000 100100 #> 25 2021-02-01 00:00:00 158.5000 -14.10000  26    0  28  99100 100200 #> 26 2021-02-01 03:00:00 159.5549 -14.40561  28    0  28  98700 100100 #> 27 2021-02-01 06:00:00 160.7000 -14.80000  31    0  28  98300 100000 #> 28 2021-02-01 09:00:00 161.7100 -15.23473  32    0  28  98100 100000 #> 29 2021-02-01 12:00:00 162.6000 -15.70000  33    1  28  98000 100000 #> 30 2021-02-01 15:00:00 163.3675 -16.17961  32    0  28  98100 100000 #> 31 2021-02-01 18:00:00 164.0000 -16.60000  31    0  28  98300 100000 #> 32 2021-02-01 21:00:00 164.5236 -16.81958  27    0  50  98600 100000 #> 33 2021-02-02 00:00:00 165.0000 -17.10000  23    0  74  99000 100000 #> 34 2021-02-02 03:00:00 165.5794 -17.69769  23    0  74  99000 100000 #> 35 2021-02-02 06:00:00 166.1000 -18.40000  23    0  74  99000 100000 #> 36 2021-02-02 09:00:00 166.4160 -18.99959  23    0  74  99000 100000 #> 37 2021-02-02 12:00:00 166.7000 -19.60000  23    0  74  99000 100000 #> 38 2021-02-02 15:00:00 167.2238 -20.25790  26    0  74  98800 100000 #> 39 2021-02-02 18:00:00 167.6000 -20.90000  28    0  74  98600 100000 #> 40 2021-02-02 21:00:00 167.4838 -21.50245  27    0  93  98700 100000 #> 41 2021-02-03 00:00:00 167.2000 -22.00000  26    0 111  98800 100000 #> 42 2021-02-03 03:00:00 167.0923 -22.37493  24    0 111  98800 100000 #> 43 2021-02-03 06:00:00 167.0000 -22.60000  23   -2 111  98800 100000 #> 44 2021-02-03 09:00:00 166.8574 -22.69500  21   -2 111  99000 100000 #> 45 2021-02-03 12:00:00 166.7000 -22.70000  18   -2 111  99200 100100 #> 46 2021-02-03 15:00:00 166.5875 -22.71482  15   -2  96  99500 100200 #> 47 2021-02-03 18:00:00 166.4000 -22.70000  13   -1  83  99900 100300 #> 48 2021-02-03 21:00:00 166.0499 -22.65790  11   -1  83 100000 100300 #> 49 2021-02-04 00:00:00 165.6000 -22.60000  10   -2  83 100200 100300 #>  #>  #> ***** End stormsList ***** # }"},{"path":"/reference/spatialBehaviour.html","id":null,"dir":"Reference","previous_headings":"","what":"Computing wind behaviour and summary statistics over given areas — spatialBehaviour","title":"Computing wind behaviour and summary statistics over given areas — spatialBehaviour","text":"spatialBehaviour() function allows computing wind speed direction cell regular grid (.e., raster) given tropical cyclone set tropical cyclones. also allows compute three associated summary statistics.","code":""},{"path":"/reference/spatialBehaviour.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computing wind behaviour and summary statistics over given areas — spatialBehaviour","text":"","code":"spatialBehaviour(   sts,   product = \"MSW\",   windThreshold = c(18, 33, 42, 49, 58, 70),   method = \"Willoughby\",   asymmetry = \"Chen\",   empiricalRMW = FALSE,   spaceRes = \"2.5min\",   tempRes = 1,   verbose = 2 )"},{"path":"/reference/spatialBehaviour.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computing wind behaviour and summary statistics over given areas — spatialBehaviour","text":"sts StormsList object product character vector. Desired output statistics: \"Profiles\", 2D wind speed direction fields, \"MSW\", maximum sustained wind speed (default setting), \"PDI\", power dissipation index, \"Exposure\", duration exposure. windThreshold numeric vector. Minimal wind threshold(s) (\\(m.s^{-1}\\)) used compute duration exposure product=\"Exposure\". default thresholds used Saffir-Simpson hurricane wind scale used (.e., 18, 33, 42, 49, 58, 70 \\(m.s^{-1}\\)). method character. Model used compute wind speed direction. Three different models implemented: \"Willoughby\", symmetrical model developed Willoughby et al. (2006) (default setting), \"Holland\", symmetrical model developed Holland (1980), \"Boose\", asymmetrical model developed  Boose et al. (2004). asymmetry character. method=\"Holland\" method=\"Willoughby\", argument specifies method used add asymmetry. Can : \"Chen\", model developed Chen (1994) (default setting), \"Miyazaki\", model developed Miyazaki et al. (1962), \"None\", asymmetry. empiricalRMW logical. Whether (TRUE) (FALSE) compute radius maximum wind (rmw) empirically using model developed Willoughby et al. (2006). empiricalRMW==FALSE (default setting) rmw provided StormsList used. spaceRes character. Spatial resolution. Can \"30 sec\" (~1 km equator), \"2.5 min\" (~4.5 km equator), \"5 min\" (~9 km equator) \"10 min\" (~18.6 km equator). Default setting \"2.5 min\". tempRes numeric. Temporal resolution. Can 1 (60 min, default setting), 0.75 (45min), 0.5 (30 min), 0.25 (15 min). verbose numeric. Whether function display informations process /outputs. Can : 2, information processes outputs displayed (default setting), 1, information processes displayed, pr 0, information displayed.","code":""},{"path":"/reference/spatialBehaviour.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computing wind behaviour and summary statistics over given areas — spatialBehaviour","text":"spatialBehaviour() function returns SpatRaster objects (WGS84). number layers output depends number storms inputs, desired product, well tempRes argument: product = \"MSW\", function returns one layer Storm. names layer follow following terminology, name storm capital letters “MSW” separated underscores (e.g., \"PAM_MSW\"), product = \"PDI\", function returns one layer Storm. names layer follow following terminology, name storm capital letters “PDI” separated underscores (e.g., \"PAM_PDI\"), product =\"Exposure\", function returns one layer wind speed values windThreshold argument Storm. names layer follow following terminology, name storm capital letters, \"Exposure\", threshold value separated underscores (e.g., \"PAM_Exposure_18\", \"PAM_Exposure_33\", ...), product = \"Profiles\" function returns one layer wind speed one layer wind direction observation interpolated observation Storm. names layer follow following terminology, name storm capital letters, \"Speed\" \"Direction\", indices observation separated underscores (e.g., \"PAM_Speed_41\", \"PAM_Direction_41\",...).","code":""},{"path":"/reference/spatialBehaviour.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Computing wind behaviour and summary statistics over given areas — spatialBehaviour","text":"Storm track data sets, extracted IBRTrACKS (Knapp et al., 2010), usually provide observation 3- 6-hours temporal resolution. spatialBehaviour() function, linear interpolations used reach temporal resolution specified tempRes argument (default value = 1 hour). product = \"MSW\", product = \"PDI\", product = \"Exposure\" focal() function terra R package used smooth results using moving windows. Holland (1980) model, widely used literature, based 'gradient wind balance mature tropical cyclones. wind speed distribution computed circular air pressure field, can derived central environmental pressure radius maximum winds. \\(v_r = \\sqrt{\\frac{b}{\\rho} \\times \\left(\\frac{R_m}{r}\\right)^b \\times (p_{oci} - p_c)   \\times e^{-\\left(\\frac{R_m}{r}\\right)^b} + \\left(\\frac{r \\times f}{2}\\right)^2} -   \\left(\\frac{r \\times f}{2}\\right)\\) , \\(b = \\frac{\\rho \\times e \\times v_m^2}{p_{oci} - p_c}\\) \\(f = 2 \\times 7.29 \\times 10^{-5} \\sin(\\phi)\\) , \\(v_r\\) tangential wind speed (\\(m.s^{-1}\\)), \\(b\\) shape parameter, \\(\\rho\\) air density set \\(1.15 kg.m^{-3}\\), \\(e\\) base natural logarithms (~2.718282), \\(v_m\\) maximum sustained wind speed (\\(m.s^{-1}\\)), \\(p_{oci}\\) pressure outermost closed isobar storm (\\(Pa\\)), \\(p_c\\) pressure centre storm (\\(Pa\\)), \\(r\\) distance eye storm (\\(km\\)), \\(R_m\\) radius maximum sustained wind speed (\\(km\\)), \\(f\\) Coriolis force (\\(N.kg^{-1}\\), \\(\\phi\\) latitude). Willoughby et al. (2006) model empirical model fitted aircraft observations. model considers two regions: inside eye external radii, wind formulations use different exponents better match observations. model, wind speed increases power function radius inside eye decays exponentially outside eye smooth polynomial transition across eyewall. \\(\\left\\{\\begin{aligned}    v_r &= v_m \\times \\left(\\frac{r}{R_m}\\right)^{n} \\quad \\quad r < R_m \\\\    v_r &= v_m \\times \\left((1-) \\times e^{-\\frac{|r-R_m|}{X1}} +    \\times e^{-\\frac{|r-R_m|}{X2}}\\right) \\quad \\quad r \\geq R_m \\\\    \\end{aligned}    \\right.    \\) , \\(n = 2.1340 + 0.0077 \\times v_m - 0.4522 \\times \\ln(R_m) - 0.0038 \\times |\\phi|\\) \\(X1 = 287.6 - 1.942 \\times v_m + 7.799 \\times \\ln(R_m) + 1.819 \\times |\\phi|\\) \\(= 0.5913 + 0.0029 \\times v_m - 0.1361 \\times \\ln(R_m) - 0.0042 \\times |\\phi|\\) \\(\\ge0\\) , \\(v_r\\) tangential wind speed (\\(m.s^{-1}\\)), \\(v_m\\) maximum sustained wind speed (\\(m.s^{-1}\\)), \\(r\\) distance eye storm (\\(km\\)), \\(R_m\\) radius maximum sustained wind speed (\\(km\\)), \\(\\phi\\) latitude centre storm, \\(X2 = 25\\). Asymmetry can added Holland (1980) Willoughby et al. (2006) wind fields follows, \\(\\vec{V} = \\vec{V_c} + C \\times \\vec{V_t}\\) , \\(\\vec{V}\\) combined asymmetric wind field, \\(\\vec{V_c}\\) symmetric wind field, \\(\\vec{V_t}\\) translation speed storm, \\(C\\) function \\(r\\), distance eye storm (\\(km\\)). Two formulations C proposed Miyazaki et al. (1962) Chen (1994) implemented. Miyazaki et al. (1962) \\(C = e^{(-\\frac{r}{500} \\times \\pi)}\\) Chen (1994) \\(C = \\frac{3 \\times R_m^{\\frac{3}{2}} \\times r^{\\frac{3}{2}}}{R_m^3 +   r^3 +R_m^{\\frac{3}{2}} \\times r^{\\frac{3}{2}}}\\) , \\(R_m\\) radius maximum sustained wind speed (\\(km\\)) Boose et al. (2004) model, “HURRECON” model, modification Holland (1980) model. addition adding asymmetry, model treats water land differently, using different surface friction coefficient . \\(v_r = F\\left(v_m - S \\times (1 - \\sin(T)) \\times \\frac{v_h}{2} \\right) \\times   \\sqrt{\\left(\\frac{R_m}{r}\\right)^b \\times e^{1 - \\left(\\frac{R_m}{r}\\right)^b}}\\) , \\(b = \\frac{\\rho \\times e \\times v_m^2}{p_{oci} - p_c}\\) , \\(v_r\\) tangential wind speed (\\(m.s^{-1}\\)), \\(F\\) scaling parameter friction (\\(1.0\\) water, \\(0.8\\) land), \\(v_m\\) maximum sustained wind speed (\\(m.s^{-1}\\)), \\(S\\) scaling parameter asymmetry (usually set \\(1\\)), \\(T\\) oriented angle (clockwise/counter clockwise Northern/Southern Hemisphere) forward trajectory storm radial line eye storm point $r$ \\(v_h\\) storm velocity (\\(m.s^{-1}\\)), \\(R_m\\) radius maximum sustained wind speed (\\(km\\)), \\(r\\) distance eye storm (\\(km\\)), \\(b\\) shape parameter, \\(\\rho = 1.15\\) air density (\\(kg.m^{-3}\\)), \\(p_{oci}\\) pressure outermost closed isobar storm (\\(Pa\\)), \\(p_c\\) pressure centre storm (\\(pressure\\) \\(Pa\\)).","code":""},{"path":"/reference/spatialBehaviour.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Computing wind behaviour and summary statistics over given areas — spatialBehaviour","text":"Boose, E. R., Serrano, M. ., & Foster, D. R. (2004). Landscape regional impacts hurricanes Puerto Rico. Ecological Monographs, 74(2), Article 2. https://doi.org/10.1890/02-4057 Chen, K.-M. (1994). computation method typhoon wind field. Tropic Oceanology, 13(2), 41–48. Holland, G. J. (1980). Analytic Model Wind Pressure Profiles Hurricanes. Monthly Weather Review, 108(8), 1212–1218. https://doi.org/10.1175/1520-0493(1980)108<1212:AAMOTW>2.0.CO;2 Knapp, K. R., Kruk, M. C., Levinson, D. H., Diamond, H. J., & Neumann, C. J. (2010). International Best Track Archive Climate Stewardship (IBTrACS). Bulletin American Meteorological Society, 91(3), Article 3. https://doi.org/10.1175/2009bams2755.1 Miyazaki, M., Ueno, T., & Unoki, S. (1962). theoretical investigations typhoon surges along Japanese coast (II). Oceanographical Magazine, 13(2), 103–117. Willoughby, H. E., Darling, R. W. R., & Rahn, M. E. (2006). Parametric Representation Primary Hurricane Vortex. Part II: New Family Sectionally Continuous Profiles. Monthly Weather Review, 134(4), 1102–1120. https://doi.org/10.1175/MWR3106.1","code":""},{"path":"/reference/spatialBehaviour.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computing wind behaviour and summary statistics over given areas — spatialBehaviour","text":"","code":"# \\donttest{ # Creating a stormsDataset sds <- defStormsDataset() #> Warning: No basin argument specified. StormR will work as expected #>              but cannot use basin filtering for speed-up when collecting data #> === Loading data  === #> Open database... /home/runner/work/_temp/Library/StormR/extdata/test_dataset.nc opened #> Collecting data ... #> === DONE ===  # Geting storm track data for tropical cyclone Pam (2015) near Vanuatu pam <- defStormsList(sds = sds, loi = \"Vanuatu\", names = \"PAM\") #> === Storms processing ... === #>  #> -> Making buffer: Done #> -> Searching for PAM storm ... #>    -> Identifying Storms: Done #> -> Gathering storm(s) ...  #>  #> === DONE with run time 0.4858308 sec === #>  #> SUMMARY: #> (*) LOI: Vanuatu  #> (*) Buffer size: 300 km #> (*) Remove Tropical Depressions (< 18 m/s in sshs): yes #> (*) Number of storms: 1  #>         Name - Tropical season - SSHS - Number of observation within buffer: #>         PAM - 2015 - 5 - 20  #>   # Computing maximum sustained wind speed generated by Pam (2015) near Vanuatu # using default settings msw.pam <- spatialBehaviour(pam) #> === spatialBehaviour processing ... === #>  #> Initializing data ... Done #>  #> Computation settings: #>   (*) Temporal resolution: Every 60 min #>   (*) Space resolution: 2.5min  #>   (*) Method used: Willoughby  #>   (*) Product(s) to compute: MSW  #>   (*) Asymmetry used: Chen  #>  #> Storm(s): #>   ( 1 )  PAM  #>  #> PAM  ( 1 / 1 ) #>    |                                                                               |                                                                      |   0%   |                                                                               |=                                                                     |   1%   |                                                                               |==                                                                    |   3%   |                                                                               |===                                                                   |   4%   |                                                                               |====                                                                  |   6%   |                                                                               |=====                                                                 |   7%   |                                                                               |======                                                                |   9%   |                                                                               |=======                                                               |  10%   |                                                                               |========                                                              |  12%   |                                                                               |=========                                                             |  13%   |                                                                               |==========                                                            |  15%   |                                                                               |===========                                                           |  16%   |                                                                               |============                                                          |  18%   |                                                                               |=============                                                         |  19%   |                                                                               |==============                                                        |  21%   |                                                                               |===============                                                       |  22%   |                                                                               |================                                                      |  24%   |                                                                               |==================                                                    |  25%   |                                                                               |===================                                                   |  26%   |                                                                               |====================                                                  |  28%   |                                                                               |=====================                                                 |  29%   |                                                                               |======================                                                |  31%   |                                                                               |=======================                                               |  32%   |                                                                               |========================                                              |  34%   |                                                                               |=========================                                             |  35%   |                                                                               |==========================                                            |  37%   |                                                                               |===========================                                           |  38%   |                                                                               |============================                                          |  40%   |                                                                               |=============================                                         |  41%   |                                                                               |==============================                                        |  43%   |                                                                               |===============================                                       |  44%   |                                                                               |================================                                      |  46%   |                                                                               |=================================                                     |  47%   |                                                                               |==================================                                    |  49%   |                                                                               |===================================                                   |  50%   |                                                                               |====================================                                  |  51%   |                                                                               |=====================================                                 |  53%   |                                                                               |======================================                                |  54%   |                                                                               |=======================================                               |  56%   |                                                                               |========================================                              |  57%   |                                                                               |=========================================                             |  59%   |                                                                               |==========================================                            |  60%   |                                                                               |===========================================                           |  62%   |                                                                               |============================================                          |  63%   |                                                                               |=============================================                         |  65%   |                                                                               |==============================================                        |  66%   |                                                                               |===============================================                       |  68%   |                                                                               |================================================                      |  69%   |                                                                               |=================================================                     |  71%   |                                                                               |==================================================                    |  72%   |                                                                               |===================================================                   |  74%   |                                                                               |====================================================                  |  75%   |                                                                               |======================================================                |  76%   |                                                                               |=======================================================               |  78%   |                                                                               |========================================================              |  79%   |                                                                               |=========================================================             |  81%   |                                                                               |==========================================================            |  82%   |                                                                               |===========================================================           |  84%   |                                                                               |============================================================          |  85%   |                                                                               |=============================================================         |  87%   |                                                                               |==============================================================        |  88%   |                                                                               |===============================================================       |  90%   |                                                                               |================================================================      |  91%   |                                                                               |=================================================================     |  93%   |                                                                               |==================================================================    |  94%   |                                                                               |===================================================================   |  96%   |                                                                               |====================================================================  |  97%   |                                                                               |===================================================================== |  99%   |                                                                               |======================================================================| 100% #>  #> === DONE with run time 2.987 sec === #>  #> Output: #> SpatRaster stack with 1 layers: #> index - name of layers #>   1     PAM_MSW  #>   # Computing PDI generated by Pam (2015) near Vanuatu using the Holland model without asymmetry pdi.pam <- spatialBehaviour(pam, method = \"Holland\", product = \"PDI\", asymmetry = \"None\") #> === spatialBehaviour processing ... === #>  #> Initializing data ... Done #>  #> Computation settings: #>   (*) Temporal resolution: Every 60 min #>   (*) Space resolution: 2.5min  #>   (*) Method used: Holland  #>   (*) Product(s) to compute: PDI  #>   (*) Asymmetry used: None  #>  #> Storm(s): #>   ( 1 )  PAM  #>  #> PAM  ( 1 / 1 ) #>    |                                                                               |                                                                      |   0%   |                                                                               |=                                                                     |   1%   |                                                                               |==                                                                    |   3%   |                                                                               |===                                                                   |   4%   |                                                                               |====                                                                  |   6%   |                                                                               |=====                                                                 |   7%   |                                                                               |======                                                                |   9%   |                                                                               |=======                                                               |  10%   |                                                                               |========                                                              |  12%   |                                                                               |=========                                                             |  13%   |                                                                               |==========                                                            |  15%   |                                                                               |===========                                                           |  16%   |                                                                               |============                                                          |  18%   |                                                                               |=============                                                         |  19%   |                                                                               |==============                                                        |  21%   |                                                                               |===============                                                       |  22%   |                                                                               |================                                                      |  24%   |                                                                               |==================                                                    |  25%   |                                                                               |===================                                                   |  26%   |                                                                               |====================                                                  |  28%   |                                                                               |=====================                                                 |  29%   |                                                                               |======================                                                |  31%   |                                                                               |=======================                                               |  32%   |                                                                               |========================                                              |  34%   |                                                                               |=========================                                             |  35%   |                                                                               |==========================                                            |  37%   |                                                                               |===========================                                           |  38%   |                                                                               |============================                                          |  40%   |                                                                               |=============================                                         |  41%   |                                                                               |==============================                                        |  43%   |                                                                               |===============================                                       |  44%   |                                                                               |================================                                      |  46%   |                                                                               |=================================                                     |  47%   |                                                                               |==================================                                    |  49%   |                                                                               |===================================                                   |  50%   |                                                                               |====================================                                  |  51%   |                                                                               |=====================================                                 |  53%   |                                                                               |======================================                                |  54%   |                                                                               |=======================================                               |  56%   |                                                                               |========================================                              |  57%   |                                                                               |=========================================                             |  59%   |                                                                               |==========================================                            |  60%   |                                                                               |===========================================                           |  62%   |                                                                               |============================================                          |  63%   |                                                                               |=============================================                         |  65%   |                                                                               |==============================================                        |  66%   |                                                                               |===============================================                       |  68%   |                                                                               |================================================                      |  69%   |                                                                               |=================================================                     |  71%   |                                                                               |==================================================                    |  72%   |                                                                               |===================================================                   |  74%   |                                                                               |====================================================                  |  75%   |                                                                               |======================================================                |  76%   |                                                                               |=======================================================               |  78%   |                                                                               |========================================================              |  79%   |                                                                               |=========================================================             |  81%   |                                                                               |==========================================================            |  82%   |                                                                               |===========================================================           |  84%   |                                                                               |============================================================          |  85%   |                                                                               |=============================================================         |  87%   |                                                                               |==============================================================        |  88%   |                                                                               |===============================================================       |  90%   |                                                                               |================================================================      |  91%   |                                                                               |=================================================================     |  93%   |                                                                               |==================================================================    |  94%   |                                                                               |===================================================================   |  96%   |                                                                               |====================================================================  |  97%   |                                                                               |===================================================================== |  99%   |                                                                               |======================================================================| 100% #>  #> === DONE with run time 3.228 sec === #>  #> Output: #> SpatRaster stack with 1 layers: #> index - name of layers #>   1     PAM_PDI  #>   # Computing duration of exposure to Saffir-Simpson hurricane wind scale threshold values # during Pam (2015) near Vanuatu using default settings exp.pam <- spatialBehaviour(pam, product = \"Exposure\") #> === spatialBehaviour processing ... === #>  #> Initializing data ... Done #>  #> Computation settings: #>   (*) Temporal resolution: Every 60 min #>   (*) Space resolution: 2.5min  #>   (*) Method used: Willoughby  #>   (*) Product(s) to compute: Exposure  #>   (*) Asymmetry used: Chen  #>  #> Storm(s): #>   ( 1 )  PAM  #>  #> PAM  ( 1 / 1 ) #>    |                                                                               |                                                                      |   0%   |                                                                               |=                                                                     |   1%   |                                                                               |==                                                                    |   3%   |                                                                               |===                                                                   |   4%   |                                                                               |====                                                                  |   6%   |                                                                               |=====                                                                 |   7%   |                                                                               |======                                                                |   9%   |                                                                               |=======                                                               |  10%   |                                                                               |========                                                              |  12%   |                                                                               |=========                                                             |  13%   |                                                                               |==========                                                            |  15%   |                                                                               |===========                                                           |  16%   |                                                                               |============                                                          |  18%   |                                                                               |=============                                                         |  19%   |                                                                               |==============                                                        |  21%   |                                                                               |===============                                                       |  22%   |                                                                               |================                                                      |  24%   |                                                                               |==================                                                    |  25%   |                                                                               |===================                                                   |  26%   |                                                                               |====================                                                  |  28%   |                                                                               |=====================                                                 |  29%   |                                                                               |======================                                                |  31%   |                                                                               |=======================                                               |  32%   |                                                                               |========================                                              |  34%   |                                                                               |=========================                                             |  35%   |                                                                               |==========================                                            |  37%   |                                                                               |===========================                                           |  38%   |                                                                               |============================                                          |  40%   |                                                                               |=============================                                         |  41%   |                                                                               |==============================                                        |  43%   |                                                                               |===============================                                       |  44%   |                                                                               |================================                                      |  46%   |                                                                               |=================================                                     |  47%   |                                                                               |==================================                                    |  49%   |                                                                               |===================================                                   |  50%   |                                                                               |====================================                                  |  51%   |                                                                               |=====================================                                 |  53%   |                                                                               |======================================                                |  54%   |                                                                               |=======================================                               |  56%   |                                                                               |========================================                              |  57%   |                                                                               |=========================================                             |  59%   |                                                                               |==========================================                            |  60%   |                                                                               |===========================================                           |  62%   |                                                                               |============================================                          |  63%   |                                                                               |=============================================                         |  65%   |                                                                               |==============================================                        |  66%   |                                                                               |===============================================                       |  68%   |                                                                               |================================================                      |  69%   |                                                                               |=================================================                     |  71%   |                                                                               |==================================================                    |  72%   |                                                                               |===================================================                   |  74%   |                                                                               |====================================================                  |  75%   |                                                                               |======================================================                |  76%   |                                                                               |=======================================================               |  78%   |                                                                               |========================================================              |  79%   |                                                                               |=========================================================             |  81%   |                                                                               |==========================================================            |  82%   |                                                                               |===========================================================           |  84%   |                                                                               |============================================================          |  85%   |                                                                               |=============================================================         |  87%   |                                                                               |==============================================================        |  88%   |                                                                               |===============================================================       |  90%   |                                                                               |================================================================      |  91%   |                                                                               |=================================================================     |  93%   |                                                                               |==================================================================    |  94%   |                                                                               |===================================================================   |  96%   |                                                                               |====================================================================  |  97%   |                                                                               |===================================================================== |  99%   |                                                                               |======================================================================| 100% #>  #> === DONE with run time 7.764 sec === #>  #> Output: #> SpatRaster stack with 6 layers: #> index - name of layers #>   1     PAM_Exposure_18  #>   2     PAM_Exposure_33  #>   3     PAM_Exposure_42  #>   4     PAM_Exposure_49  #>   5     PAM_Exposure_58  #>   6     PAM_Exposure_70  #>   # Computing wind speed and direction profiles  generated by Pam (2015) near Vanuatu # using Boose model prof.pam <- spatialBehaviour(pam, product = \"Profiles\", method = \"Boose\") #> === spatialBehaviour processing ... === #>  #> Initializing data ... Done #>  #> Computation settings: #>   (*) Temporal resolution: Every 60 min #>   (*) Space resolution: 2.5min  #>   (*) Method used: Boose  #>   (*) Product(s) to compute: Profiles  #>   (*) Asymmetry used: None  #>  #> Storm(s): #>   ( 1 )  PAM  #>  #> PAM  ( 1 / 1 ) #>    |                                                                               |                                                                      |   0%   |                                                                               |=                                                                     |   2%   |                                                                               |==                                                                    |   4%   |                                                                               |====                                                                  |   5%   |                                                                               |=====                                                                 |   7%   |                                                                               |======                                                                |   9%   |                                                                               |========                                                              |  11%   |                                                                               |=========                                                             |  12%   |                                                                               |==========                                                            |  14%   |                                                                               |===========                                                           |  16%   |                                                                               |============                                                          |  18%   |                                                                               |==============                                                        |  20%   |                                                                               |===============                                                       |  21%   |                                                                               |================                                                      |  23%   |                                                                               |==================                                                    |  25%   |                                                                               |===================                                                   |  27%   |                                                                               |====================                                                  |  29%   |                                                                               |=====================                                                 |  30%   |                                                                               |======================                                                |  32%   |                                                                               |========================                                              |  34%   |                                                                               |=========================                                             |  36%   |                                                                               |==========================                                            |  38%   |                                                                               |============================                                          |  39%   |                                                                               |=============================                                         |  41%   |                                                                               |==============================                                        |  43%   |                                                                               |===============================                                       |  45%   |                                                                               |================================                                      |  46%   |                                                                               |==================================                                    |  48%   |                                                                               |===================================                                   |  50%   |                                                                               |====================================                                  |  52%   |                                                                               |======================================                                |  54%   |                                                                               |=======================================                               |  55%   |                                                                               |========================================                              |  57%   |                                                                               |=========================================                             |  59%   |                                                                               |==========================================                            |  61%   |                                                                               |============================================                          |  62%   |                                                                               |=============================================                         |  64%   |                                                                               |==============================================                        |  66%   |                                                                               |================================================                      |  68%   |                                                                               |=================================================                     |  70%   |                                                                               |==================================================                    |  71%   |                                                                               |===================================================                   |  73%   |                                                                               |====================================================                  |  75%   |                                                                               |======================================================                |  77%   |                                                                               |=======================================================               |  79%   |                                                                               |========================================================              |  80%   |                                                                               |==========================================================            |  82%   |                                                                               |===========================================================           |  84%   |                                                                               |============================================================          |  86%   |                                                                               |=============================================================         |  88%   |                                                                               |==============================================================        |  89%   |                                                                               |================================================================      |  91%   |                                                                               |=================================================================     |  93%   |                                                                               |==================================================================    |  95%   |                                                                               |====================================================================  |  96%   |                                                                               |===================================================================== |  98%   |                                                                               |======================================================================| 100% #>  #> === DONE with run time 34.482 sec === #>  #> Output: #> SpatRaster stack with 114 layers: #> index - name of layers #>   1     PAM_Speed_28  #>   2     PAM_Speed_28.1  #>   3     PAM_Speed_28.2  #>   4     PAM_Speed_29  #>   5     PAM_Speed_29.1  #>   6     PAM_Speed_29.2  #>   7     PAM_Speed_30  #>   8     PAM_Speed_30.1  #>   9     PAM_Speed_30.2  #>   10     PAM_Speed_31  #>   11     PAM_Speed_31.1  #>   12     PAM_Speed_31.2  #>   13     PAM_Speed_32  #>   14     PAM_Speed_32.1  #>   15     PAM_Speed_32.2  #>   16     PAM_Speed_33  #>   17     PAM_Speed_33.1  #>   18     PAM_Speed_33.2  #>   19     PAM_Speed_34  #>   20     PAM_Speed_34.1  #>   21     PAM_Speed_34.2  #>   22     PAM_Speed_35  #>   23     PAM_Speed_35.1  #>   24     PAM_Speed_35.2  #>   25     PAM_Speed_36  #>   26     PAM_Speed_36.1  #>   27     PAM_Speed_36.2  #>   28     PAM_Speed_37  #>   29     PAM_Speed_37.1  #>   30     PAM_Speed_37.2  #>   31     PAM_Speed_38  #>   32     PAM_Speed_38.1  #>   33     PAM_Speed_38.2  #>   34     PAM_Speed_39  #>   35     PAM_Speed_39.1  #>   36     PAM_Speed_39.2  #>   37     PAM_Speed_40  #>   38     PAM_Speed_40.1  #>   39     PAM_Speed_40.2  #>   40     PAM_Speed_41  #>   41     PAM_Speed_41.1  #>   42     PAM_Speed_41.2  #>   43     PAM_Speed_42  #>   44     PAM_Speed_42.1  #>   45     PAM_Speed_42.2  #>   46     PAM_Speed_43  #>   47     PAM_Speed_43.1  #>   48     PAM_Speed_43.2  #>   49     PAM_Speed_44  #>   50     PAM_Speed_44.1  #>   51     PAM_Speed_44.2  #>   52     PAM_Speed_45  #>   53     PAM_Speed_45.1  #>   54     PAM_Speed_45.2  #>   55     PAM_Speed_46  #>   56     PAM_Speed_46.1  #>   57     PAM_Speed_46.2  #>   58     PAM_Direction_28  #>   59     PAM_Direction_28.1  #>   60     PAM_Direction_28.2  #>   61     PAM_Direction_29  #>   62     PAM_Direction_29.1  #>   63     PAM_Direction_29.2  #>   64     PAM_Direction_30  #>   65     PAM_Direction_30.1  #>   66     PAM_Direction_30.2  #>   67     PAM_Direction_31  #>   68     PAM_Direction_31.1  #>   69     PAM_Direction_31.2  #>   70     PAM_Direction_32  #>   71     PAM_Direction_32.1  #>   72     PAM_Direction_32.2  #>   73     PAM_Direction_33  #>   74     PAM_Direction_33.1  #>   75     PAM_Direction_33.2  #>   76     PAM_Direction_34  #>   77     PAM_Direction_34.1  #>   78     PAM_Direction_34.2  #>   79     PAM_Direction_35  #>   80     PAM_Direction_35.1  #>   81     PAM_Direction_35.2  #>   82     PAM_Direction_36  #>   83     PAM_Direction_36.1  #>   84     PAM_Direction_36.2  #>   85     PAM_Direction_37  #>   86     PAM_Direction_37.1  #>   87     PAM_Direction_37.2  #>   88     PAM_Direction_38  #>   89     PAM_Direction_38.1  #>   90     PAM_Direction_38.2  #>   91     PAM_Direction_39  #>   92     PAM_Direction_39.1  #>   93     PAM_Direction_39.2  #>   94     PAM_Direction_40  #>   95     PAM_Direction_40.1  #>   96     PAM_Direction_40.2  #>   97     PAM_Direction_41  #>   98     PAM_Direction_41.1  #>   99     PAM_Direction_41.2  #>   100     PAM_Direction_42  #>   101     PAM_Direction_42.1  #>   102     PAM_Direction_42.2  #>   103     PAM_Direction_43  #>   104     PAM_Direction_43.1  #>   105     PAM_Direction_43.2  #>   106     PAM_Direction_44  #>   107     PAM_Direction_44.1  #>   108     PAM_Direction_44.2  #>   109     PAM_Direction_45  #>   110     PAM_Direction_45.1  #>   111     PAM_Direction_45.2  #>   112     PAM_Direction_46  #>   113     PAM_Direction_46.1  #>   114     PAM_Direction_46.2  #>  # }"},{"path":"/reference/temporalBehaviour.html","id":null,"dir":"Reference","previous_headings":"","what":"Computing wind behaviour time series and summary statistics at given point locations — temporalBehaviour","title":"Computing wind behaviour time series and summary statistics at given point locations — temporalBehaviour","text":"temporalBehaviour() function allows computing wind speed direction given location set locations along lifespan tropical cyclone. also allows compute three associated summary statistics.","code":""},{"path":"/reference/temporalBehaviour.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computing wind behaviour time series and summary statistics at given point locations — temporalBehaviour","text":"","code":"temporalBehaviour(   sts,   points,   product = \"TS\",   windThreshold = c(18, 33, 42, 49, 58, 70),   method = \"Willoughby\",   asymmetry = \"Chen\",   empiricalRMW = FALSE,   tempRes = 1,   verbose = 1 )"},{"path":"/reference/temporalBehaviour.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computing wind behaviour time series and summary statistics at given point locations — temporalBehaviour","text":"sts StormsList object. points data.frame. Consisting two columns names \"x\" (longitude) \"y\" (latitude), providing coordinates decimal degrees point locations. Row names can also provided named locations. product character. Desired output statistics: \"TS\", time series wind speeds directions (default setting), \"PDI\", power dissipation index, \"Exposure\", duration exposure defined wind thresholds. windThreshold numeric vector. Minimal wind threshold(s) (\\(m.s^{-1}\\)) used compute duration exposure product=\"Exposure\". default thresholds used Saffir-Simpson hurricane wind scale used (.e., 18, 33, 42, 49, 58, 70 \\(m.s^{-1}\\)). method character. Model used compute wind speed direction. Three different models implemented: \"Willoughby\", symmetrical model developed Willoughby et al. (2006) (default setting), \"Holland\", symmetrical model developed Holland (1980), \"Boose\", asymmetrical model developed  Boose et al. (2004). asymmetry character. method=\"Holland\" method=\"Willoughby\", argument specifies method used add asymmetry. Can : \"Chen\", model developed Chen (1994) (default setting), \"Miyazaki\", model developed Miyazaki et al. (1962), \"None\", asymmetry. empiricalRMW logical. Whether (TRUE) (FALSE) compute radius maximum wind (rmw) empirically using model developed Willoughby et al. (2006). empiricalRMW==FALSE (default setting) rmw provided StormsList used. tempRes numeric. Temporal resolution. Can 1 (60 min, default setting), 0.75 (45min), 0.5 (30 min), 0.25 (15 min). verbose numeric. Information displayed. Can : 2, information processes outputs displayed (default setting), 1, information processes displayed, 0, information displayed.","code":""},{"path":"/reference/temporalBehaviour.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computing wind behaviour time series and summary statistics at given point locations — temporalBehaviour","text":"storm point location, temporalBehaviour() function returns data.frame. data frames organised named lists. Depending product argument different data.frame returned: product == \"TS\", function returns data.frame one row observation (interpolated observation) four columns wind speed (\\(m.s^{-1}\\)), wind direction (degree), observation number, ISO time observations, product == \"PDI\", function returns data.frame one row point location one column PDI, product == \"Exposure\", function returns data.frame one row duration exposure winds wind speed threshold defined windThreshold argument one column point location.","code":""},{"path":"/reference/temporalBehaviour.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Computing wind behaviour time series and summary statistics at given point locations — temporalBehaviour","text":"Storm track data sets, extracted IBRTrACKS (Knapp et al., 2010), usually provide observation 3- 6-hours temporal resolution. temporalBehaviour() function, linear interpolations used reach temporal resolution specified tempRes argument (default value = 1 hour). Holland (1980) model, widely used literature, based 'gradient wind balance mature tropical cyclones. wind speed distribution computed circular air pressure field, can derived central environmental pressure radius maximum winds. \\(v_r = \\sqrt{\\frac{b}{\\rho} \\times \\left(\\frac{R_m}{r}\\right)^b \\times (p_{oci} - p_c)   \\times e^{-\\left(\\frac{R_m}{r}\\right)^b} + \\left(\\frac{r \\times f}{2}\\right)^2} -   \\left(\\frac{r \\times f}{2}\\right)\\) , \\(b = \\frac{\\rho \\times e \\times v_m^2}{p_{oci} - p_c}\\) \\(f = 2 \\times 7.29 \\times 10^{-5} \\sin(\\phi)\\) , \\(v_r\\) tangential wind speed (\\(m.s^{-1}\\)), \\(b\\) shape parameter, \\(\\rho\\) air density set \\(1.15 kg.m^{-3}\\), \\(e\\) base natural logarithms (~2.718282), \\(v_m\\) maximum sustained wind speed (\\(m.s^{-1}\\)), \\(p_{oci}\\) pressure outermost closed isobar storm (\\(Pa\\)), \\(p_c\\) pressure centre storm (\\(Pa\\)), \\(r\\) distance eye storm (\\(km\\)), \\(R_m\\) radius maximum sustained wind speed (\\(km\\)), \\(f\\) Coriolis force (\\(N.kg^{-1}\\), \\(\\phi\\) latitude). Willoughby et al. (2006) model empirical model fitted aircraft observations. model considers two regions: inside eye external radii, wind formulations use different exponents better match observations. model, wind speed increases power function radius inside eye decays exponentially outside eye smooth polynomial transition across eyewall. \\(\\left\\{\\begin{aligned}    v_r &= v_m \\times \\left(\\frac{r}{R_m}\\right)^{n} \\quad \\quad r < R_m \\\\    v_r &= v_m \\times \\left((1-) \\times e^{-\\frac{|r-R_m|}{X1}} +    \\times e^{-\\frac{|r-R_m|}{X2}}\\right) \\quad \\quad r \\geq R_m \\\\    \\end{aligned}    \\right.    \\) , \\(n = 2.1340 + 0.0077 \\times v_m - 0.4522 \\times \\ln(R_m) - 0.0038 \\times |\\phi|\\) \\(X1 = 287.6 - 1.942 \\times v_m + 7.799 \\times \\ln(R_m) + 1.819 \\times |\\phi|\\) \\(= 0.5913 + 0.0029 \\times v_m - 0.1361 \\times \\ln(R_m) - 0.0042 \\times |\\phi|\\) \\(\\ge0\\) , \\(v_r\\) tangential wind speed (\\(m.s^{-1}\\)), \\(v_m\\) maximum sustained wind speed (\\(m.s^{-1}\\)), \\(r\\) distance eye storm (\\(km\\)), \\(R_m\\) radius maximum sustained wind speed (\\(km\\)), \\(\\phi\\) latitude centre storm, \\(X2 = 25\\). Asymmetry can added Holland (1980) Willoughby et al. (2006) wind fields follows, \\(\\vec{V} = \\vec{V_c} + C \\times \\vec{V_t}\\) , \\(\\vec{V}\\) combined asymmetric wind field, \\(\\vec{V_c}\\) symmetric wind field, \\(\\vec{V_t}\\) translation speed storm, \\(C\\) function \\(r\\), distance eye storm (\\(km\\)). Two formulations C proposed Miyazaki et al. (1962) Chen (1994) implemented. Miyazaki et al. (1962) \\(C = e^{(-\\frac{r}{500} \\times \\pi)}\\) Chen (1994) \\(C = \\frac{3 \\times R_m^{\\frac{3}{2}} \\times   r^{\\frac{3}{2}}}{R_m^3 + r^3 +R_m^{\\frac{3}{2}} \\times r^{\\frac{3}{2}}}\\) , \\(R_m\\) radius maximum sustained wind speed (\\(km\\)) Boose et al. (2004) model, “HURRECON” model, modification Holland (1980) model. addition adding asymmetry, model treats water land differently, using different surface friction coefficient . \\(v_r = F\\left(v_m - S \\times (1 - \\sin(T)) \\times \\frac{v_h}{2} \\right)   \\times \\sqrt{\\left(\\frac{R_m}{r}\\right)^b \\times e^{1 - \\left(\\frac{R_m}{r}\\right)^b}}\\) , \\(b = \\frac{\\rho \\times e \\times v_m^2}{p_{oci} - p_c}\\) , \\(v_r\\) tangential wind speed (\\(m.s^{-1}\\)), \\(F\\) scaling parameter friction (\\(1.0\\) water, \\(0.8\\) land), \\(v_m\\) maximum sustained wind speed (\\(m.s^{-1}\\)), \\(S\\) scaling parameter asymmetry (usually set \\(1\\)), \\(T\\) oriented angle (clockwise/counter clockwise Northern/Southern Hemisphere) forward trajectory storm radial line eye storm point $r$ \\(v_h\\) storm velocity (\\(m.s^{-1}\\)), \\(R_m\\) radius maximum sustained wind speed (\\(km\\)), \\(r\\) distance eye storm (\\(km\\)), \\(b\\) shape parameter, \\(\\rho = 1.15\\) air density (\\(kg.m^{-3}\\)), \\(p_{oci}\\) pressure outermost closed isobar storm (\\(Pa\\)), \\(p_c\\) pressure centre storm (\\(pressure\\) \\(Pa\\)).","code":""},{"path":"/reference/temporalBehaviour.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Computing wind behaviour time series and summary statistics at given point locations — temporalBehaviour","text":"Boose, E. R., Serrano, M. ., & Foster, D. R. (2004). Landscape regional impacts hurricanes Puerto Rico. Ecological Monographs, 74(2), Article 2. https://doi.org/10.1890/02-4057 Chen, K.-M. (1994). computation method typhoon wind field. Tropic Oceanology, 13(2), 41–48. Holland, G. J. (1980). Analytic Model Wind Pressure Profiles Hurricanes. Monthly Weather Review, 108(8), 1212–1218. https://doi.org/10.1175/1520-0493(1980)108<1212:AAMOTW>2.0.CO;2 Knapp, K. R., Kruk, M. C., Levinson, D. H., Diamond, H. J., & Neumann, C. J. (2010). International Best Track Archive Climate Stewardship (IBTrACS). Bulletin American Meteorological Society, 91(3), Article 3. https://doi.org/10.1175/2009bams2755.1 Miyazaki, M., Ueno, T., & Unoki, S. (1962). theoretical investigations typhoon surges along Japanese coast (II). Oceanographical Magazine, 13(2), 103–117. Willoughby, H. E., Darling, R. W. R., & Rahn, M. E. (2006). Parametric Representation Primary Hurricane Vortex. Part II: New Family Sectionally Continuous Profiles. Monthly Weather Review, 134(4), 1102–1120. https://doi.org/10.1175/MWR3106.1","code":""},{"path":"/reference/temporalBehaviour.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computing wind behaviour time series and summary statistics at given point locations — temporalBehaviour","text":"","code":"# Creating a stormsDataset # \\donttest{ sds <- defStormsDataset() #> Warning: No basin argument specified. StormR will work as expected #>              but cannot use basin filtering for speed-up when collecting data #> === Loading data  === #> Open database... /home/runner/work/_temp/Library/StormR/extdata/test_dataset.nc opened #> Collecting data ... #> === DONE ===  # Geting storm track data for tropical cyclone Pam (2015) near Vanuatu pam <- defStormsList(sds = sds, loi = \"Vanuatu\", names = \"PAM\") #> === Storms processing ... === #>  #> -> Making buffer: Done #> -> Searching for PAM storm ... #>    -> Identifying Storms: Done #> -> Gathering storm(s) ...  #>  #> === DONE with run time 0.4774809 sec === #>  #> SUMMARY: #> (*) LOI: Vanuatu  #> (*) Buffer size: 300 km #> (*) Remove Tropical Depressions (< 18 m/s in sshs): yes #> (*) Number of storms: 1  #>         Name - Tropical season - SSHS - Number of observation within buffer: #>         PAM - 2015 - 5 - 20  #>   pts <- data.frame(x = c(168.5, 168), y = c(-17.9, -16.3)) row.names(pts) <- c(\"point_1\", \"point_2\")  # Computing time series of wind speed and direction for Pam # over points 1 and 2 defined above ts.pam <- temporalBehaviour(pam, points = pts) #> === temporalBehaviour processing ... === #>  #> Initializing data ... Done #>  #> Computation settings: #>   (*) Temporal resolution: Every 60 min #>   (*) Method used: Willoughby  #>   (*) Product(s) to compute: TS  #>   (*) Asymmetry used: Chen  #>   (*) Points: lon-lat #>        168.5   -17.9  #>        168   -16.3  #>  #>  #> Storm(s): #>   ( 1 )  PAM  #>  #>  #> === DONE === #>   # Computing PDI for Pam over points 1 and 2 defined above pdi.pam <- temporalBehaviour(pam, points = pts, product = \"PDI\") #> === temporalBehaviour processing ... === #>  #> Initializing data ... Done #>  #> Computation settings: #>   (*) Temporal resolution: Every 60 min #>   (*) Method used: Willoughby  #>   (*) Product(s) to compute: PDI  #>   (*) Asymmetry used: Chen  #>   (*) Points: lon-lat #>        168.5   -17.9  #>        168   -16.3  #>  #>  #> Storm(s): #>   ( 1 )  PAM  #>  #>  #> === DONE === #>   # Computing the duration of exposure to wind speeds above the thresholds # used by the Saffir-Simpson hurricane wind scale for Pam # over points 1 and 2 defined above exp.pam <- temporalBehaviour(pam, points = pts, product = \"Exposure\") #> === temporalBehaviour processing ... === #>  #> Initializing data ... Done #>  #> Computation settings: #>   (*) Temporal resolution: Every 60 min #>   (*) Method used: Willoughby  #>   (*) Product(s) to compute: Exposure  #>   (*) Asymmetry used: Chen  #>   (*) Points: lon-lat #>        168.5   -17.9  #>        168   -16.3  #>  #>  #> Storm(s): #>   ( 1 )  PAM  #>  #>  #> === DONE === #>  # }"},{"path":"/reference/writeRast.html","id":null,"dir":"Reference","previous_headings":"","what":"Exporting rasters to GeoTIFF or NetCDF files — writeRast","title":"Exporting rasters to GeoTIFF or NetCDF files — writeRast","text":"writeRast() function exports rasters stored SpatRaster objects GeoTIFF NetCDF files.","code":""},{"path":"/reference/writeRast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exporting rasters to GeoTIFF or NetCDF files — writeRast","text":"","code":"writeRast(rast, filename = NULL, path = \"./\", ...)"},{"path":"/reference/writeRast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exporting rasters to GeoTIFF or NetCDF files — writeRast","text":"rast SpatRaster object. filename character. Output file name. Can either \".tiff\" file (GeoTIFF) \".nc\" (NetCDF). default filename=NULL name file generated based raster information (storms products) '.tiff' extension. path character. Path directory file exported . default path=./'. ... Additional arguments passed terra::writeRaster function saving \".tiff\" format.","code":""},{"path":"/reference/writeRast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exporting rasters to GeoTIFF or NetCDF files — writeRast","text":"NULL","code":""},{"path":"/reference/writeRast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exporting rasters to GeoTIFF or NetCDF files — writeRast","text":"","code":"# Creating a stormsDataset # \\donttest{ sds <- defStormsDataset() #> Warning: No basin argument specified. StormR will work as expected #>              but cannot use basin filtering for speed-up when collecting data #> === Loading data  === #> Open database... /home/runner/work/_temp/Library/StormR/extdata/test_dataset.nc opened #> Collecting data ... #> === DONE ===  # Getting storm track data for tropical cyclone Pam (2015) near Vanuatu pam <- defStormsList(sds = sds, loi = \"Vanuatu\", names = \"PAM\") #> === Storms processing ... === #>  #> -> Making buffer: Done #> -> Searching for PAM storm ... #>    -> Identifying Storms: Done #> -> Gathering storm(s) ...  #>  #> === DONE with run time 0.4774222 sec === #>  #> SUMMARY: #> (*) LOI: Vanuatu  #> (*) Buffer size: 300 km #> (*) Remove Tropical Depressions (< 18 m/s in sshs): yes #> (*) Number of storms: 1  #>         Name - Tropical season - SSHS - Number of observation within buffer: #>         PAM - 2015 - 5 - 20  #>   # Computing maximum sustained wind speed pam.msw <- spatialBehaviour(pam) #> === spatialBehaviour processing ... === #>  #> Initializing data ... Done #>  #> Computation settings: #>   (*) Temporal resolution: Every 60 min #>   (*) Space resolution: 2.5min  #>   (*) Method used: Willoughby  #>   (*) Product(s) to compute: MSW  #>   (*) Asymmetry used: Chen  #>  #> Storm(s): #>   ( 1 )  PAM  #>  #> PAM  ( 1 / 1 ) #>    |                                                                               |                                                                      |   0%   |                                                                               |=                                                                     |   1%   |                                                                               |==                                                                    |   3%   |                                                                               |===                                                                   |   4%   |                                                                               |====                                                                  |   6%   |                                                                               |=====                                                                 |   7%   |                                                                               |======                                                                |   9%   |                                                                               |=======                                                               |  10%   |                                                                               |========                                                              |  12%   |                                                                               |=========                                                             |  13%   |                                                                               |==========                                                            |  15%   |                                                                               |===========                                                           |  16%   |                                                                               |============                                                          |  18%   |                                                                               |=============                                                         |  19%   |                                                                               |==============                                                        |  21%   |                                                                               |===============                                                       |  22%   |                                                                               |================                                                      |  24%   |                                                                               |==================                                                    |  25%   |                                                                               |===================                                                   |  26%   |                                                                               |====================                                                  |  28%   |                                                                               |=====================                                                 |  29%   |                                                                               |======================                                                |  31%   |                                                                               |=======================                                               |  32%   |                                                                               |========================                                              |  34%   |                                                                               |=========================                                             |  35%   |                                                                               |==========================                                            |  37%   |                                                                               |===========================                                           |  38%   |                                                                               |============================                                          |  40%   |                                                                               |=============================                                         |  41%   |                                                                               |==============================                                        |  43%   |                                                                               |===============================                                       |  44%   |                                                                               |================================                                      |  46%   |                                                                               |=================================                                     |  47%   |                                                                               |==================================                                    |  49%   |                                                                               |===================================                                   |  50%   |                                                                               |====================================                                  |  51%   |                                                                               |=====================================                                 |  53%   |                                                                               |======================================                                |  54%   |                                                                               |=======================================                               |  56%   |                                                                               |========================================                              |  57%   |                                                                               |=========================================                             |  59%   |                                                                               |==========================================                            |  60%   |                                                                               |===========================================                           |  62%   |                                                                               |============================================                          |  63%   |                                                                               |=============================================                         |  65%   |                                                                               |==============================================                        |  66%   |                                                                               |===============================================                       |  68%   |                                                                               |================================================                      |  69%   |                                                                               |=================================================                     |  71%   |                                                                               |==================================================                    |  72%   |                                                                               |===================================================                   |  74%   |                                                                               |====================================================                  |  75%   |                                                                               |======================================================                |  76%   |                                                                               |=======================================================               |  78%   |                                                                               |========================================================              |  79%   |                                                                               |=========================================================             |  81%   |                                                                               |==========================================================            |  82%   |                                                                               |===========================================================           |  84%   |                                                                               |============================================================          |  85%   |                                                                               |=============================================================         |  87%   |                                                                               |==============================================================        |  88%   |                                                                               |===============================================================       |  90%   |                                                                               |================================================================      |  91%   |                                                                               |=================================================================     |  93%   |                                                                               |==================================================================    |  94%   |                                                                               |===================================================================   |  96%   |                                                                               |====================================================================  |  97%   |                                                                               |===================================================================== |  99%   |                                                                               |======================================================================| 100% #>  #> === DONE with run time 2.799 sec === #>  #> Output: #> SpatRaster stack with 1 layers: #> index - name of layers #>   1     PAM_MSW  #>   # Exporting maximum sustained wind speed raster layer to a GeoTIFF file writeRast(pam.msw, path = paste0(tempdir(), \"/\"))  # Computing power dissipation index for several storms near New Caledonia sts.nc <- defStormsList(sds = sds, loi = \"New Caledonia\") #> === Storms processing ... === #>  #> -> Making buffer: Done #> -> Searching storms from 2015 to 2021 ... #>    -> Identifying Storms: 9 potential candidates... #> -> Gathering storm(s) ...  #>    |                                                                               |                                                                      |   0%   |                                                                               |=========                                                             |  12%   |                                                                               |==================                                                    |  25%   |                                                                               |==========================                                            |  38%   |                                                                               |===================================                                   |  50%   |                                                                               |============================================                          |  62%   |                                                                               |====================================================                  |  75%   |                                                                               |=============================================================         |  88%   |                                                                               |======================================================================| 100% #>  #> === DONE with run time 0.5279922 sec === #>  #> SUMMARY: #> (*) LOI: New Caledonia  #> (*) Buffer size: 300 km #> (*) Remove Tropical Depressions (< 18 m/s in sshs): yes #> (*) Number of storms: 7  #>         Name - Tropical season - SSHS - Number of observation within buffer: #>         PAM - 2015 - 5 - 5  #>         SOLO - 2015 - 0 - 15  #>         ULA - 2016 - 4 - 9  #>         UESI - 2020 - 1 - 16  #>         GRETEL - 2020 - 1 - 11  #>         LUCAS - 2021 - 1 - 16  #>         NIRAN - 2021 - 5 - 10  #>  pdi.nc <- spatialBehaviour(sts.nc, product = \"PDI\") #> === spatialBehaviour processing ... === #>  #> Initializing data ... Done #>  #> Computation settings: #>   (*) Temporal resolution: Every 60 min #>   (*) Space resolution: 2.5min  #>   (*) Method used: Willoughby  #>   (*) Product(s) to compute: PDI  #>   (*) Asymmetry used: Chen  #>  #> Storm(s): #>   ( 7 )  PAM SOLO ULA UESI GRETEL LUCAS NIRAN  #>  #> PAM  ( 1 / 7 ) #>    |                                                                               |                                                                      |   0%   |                                                                               |===                                                                   |   4%   |                                                                               |======                                                                |   9%   |                                                                               |=========                                                             |  13%   |                                                                               |============                                                          |  17%   |                                                                               |===============                                                       |  22%   |                                                                               |==================                                                    |  26%   |                                                                               |=====================                                                 |  30%   |                                                                               |========================                                              |  35%   |                                                                               |===========================                                           |  39%   |                                                                               |==============================                                        |  43%   |                                                                               |=================================                                     |  48%   |                                                                               |=====================================                                 |  52%   |                                                                               |========================================                              |  57%   |                                                                               |===========================================                           |  61%   |                                                                               |==============================================                        |  65%   |                                                                               |=================================================                     |  70%   |                                                                               |====================================================                  |  74%   |                                                                               |=======================================================               |  78%   |                                                                               |==========================================================            |  83%   |                                                                               |=============================================================         |  87%   |                                                                               |================================================================      |  91%   |                                                                               |===================================================================   |  96%   |                                                                               |======================================================================| 100% #> SOLO  ( 2 / 7 ) #>    |                                                                               |                                                                      |   0%   |                                                                               |=                                                                     |   2%   |                                                                               |===                                                                   |   4%   |                                                                               |====                                                                  |   6%   |                                                                               |=====                                                                 |   8%   |                                                                               |=======                                                               |   9%   |                                                                               |========                                                              |  11%   |                                                                               |=========                                                             |  13%   |                                                                               |===========                                                           |  15%   |                                                                               |============                                                          |  17%   |                                                                               |=============                                                         |  19%   |                                                                               |===============                                                       |  21%   |                                                                               |================                                                      |  23%   |                                                                               |=================                                                     |  25%   |                                                                               |==================                                                    |  26%   |                                                                               |====================                                                  |  28%   |                                                                               |=====================                                                 |  30%   |                                                                               |======================                                                |  32%   |                                                                               |========================                                              |  34%   |                                                                               |=========================                                             |  36%   |                                                                               |==========================                                            |  38%   |                                                                               |============================                                          |  40%   |                                                                               |=============================                                         |  42%   |                                                                               |==============================                                        |  43%   |                                                                               |================================                                      |  45%   |                                                                               |=================================                                     |  47%   |                                                                               |==================================                                    |  49%   |                                                                               |====================================                                  |  51%   |                                                                               |=====================================                                 |  53%   |                                                                               |======================================                                |  55%   |                                                                               |========================================                              |  57%   |                                                                               |=========================================                             |  58%   |                                                                               |==========================================                            |  60%   |                                                                               |============================================                          |  62%   |                                                                               |=============================================                         |  64%   |                                                                               |==============================================                        |  66%   |                                                                               |================================================                      |  68%   |                                                                               |=================================================                     |  70%   |                                                                               |==================================================                    |  72%   |                                                                               |====================================================                  |  74%   |                                                                               |=====================================================                 |  75%   |                                                                               |======================================================                |  77%   |                                                                               |=======================================================               |  79%   |                                                                               |=========================================================             |  81%   |                                                                               |==========================================================            |  83%   |                                                                               |===========================================================           |  85%   |                                                                               |=============================================================         |  87%   |                                                                               |==============================================================        |  89%   |                                                                               |===============================================================       |  91%   |                                                                               |=================================================================     |  92%   |                                                                               |==================================================================    |  94%   |                                                                               |===================================================================   |  96%   |                                                                               |===================================================================== |  98%   |                                                                               |======================================================================| 100% #> ULA  ( 3 / 7 ) #>    |                                                                               |                                                                      |   0%   |                                                                               |==                                                                    |   3%   |                                                                               |====                                                                  |   6%   |                                                                               |======                                                                |   9%   |                                                                               |========                                                              |  11%   |                                                                               |==========                                                            |  14%   |                                                                               |============                                                          |  17%   |                                                                               |==============                                                        |  20%   |                                                                               |================                                                      |  23%   |                                                                               |==================                                                    |  26%   |                                                                               |====================                                                  |  29%   |                                                                               |======================                                                |  31%   |                                                                               |========================                                              |  34%   |                                                                               |==========================                                            |  37%   |                                                                               |============================                                          |  40%   |                                                                               |==============================                                        |  43%   |                                                                               |================================                                      |  46%   |                                                                               |==================================                                    |  49%   |                                                                               |====================================                                  |  51%   |                                                                               |======================================                                |  54%   |                                                                               |========================================                              |  57%   |                                                                               |==========================================                            |  60%   |                                                                               |============================================                          |  63%   |                                                                               |==============================================                        |  66%   |                                                                               |================================================                      |  69%   |                                                                               |==================================================                    |  71%   |                                                                               |====================================================                  |  74%   |                                                                               |======================================================                |  77%   |                                                                               |========================================================              |  80%   |                                                                               |==========================================================            |  83%   |                                                                               |============================================================          |  86%   |                                                                               |==============================================================        |  89%   |                                                                               |================================================================      |  91%   |                                                                               |==================================================================    |  94%   |                                                                               |====================================================================  |  97%   |                                                                               |======================================================================| 100% #> UESI  ( 4 / 7 ) #>    |                                                                               |                                                                      |   0%   |                                                                               |=                                                                     |   2%   |                                                                               |==                                                                    |   4%   |                                                                               |====                                                                  |   5%   |                                                                               |=====                                                                 |   7%   |                                                                               |======                                                                |   9%   |                                                                               |========                                                              |  11%   |                                                                               |=========                                                             |  12%   |                                                                               |==========                                                            |  14%   |                                                                               |===========                                                           |  16%   |                                                                               |============                                                          |  18%   |                                                                               |==============                                                        |  20%   |                                                                               |===============                                                       |  21%   |                                                                               |================                                                      |  23%   |                                                                               |==================                                                    |  25%   |                                                                               |===================                                                   |  27%   |                                                                               |====================                                                  |  29%   |                                                                               |=====================                                                 |  30%   |                                                                               |======================                                                |  32%   |                                                                               |========================                                              |  34%   |                                                                               |=========================                                             |  36%   |                                                                               |==========================                                            |  38%   |                                                                               |============================                                          |  39%   |                                                                               |=============================                                         |  41%   |                                                                               |==============================                                        |  43%   |                                                                               |===============================                                       |  45%   |                                                                               |================================                                      |  46%   |                                                                               |==================================                                    |  48%   |                                                                               |===================================                                   |  50%   |                                                                               |====================================                                  |  52%   |                                                                               |======================================                                |  54%   |                                                                               |=======================================                               |  55%   |                                                                               |========================================                              |  57%   |                                                                               |=========================================                             |  59%   |                                                                               |==========================================                            |  61%   |                                                                               |============================================                          |  62%   |                                                                               |=============================================                         |  64%   |                                                                               |==============================================                        |  66%   |                                                                               |================================================                      |  68%   |                                                                               |=================================================                     |  70%   |                                                                               |==================================================                    |  71%   |                                                                               |===================================================                   |  73%   |                                                                               |====================================================                  |  75%   |                                                                               |======================================================                |  77%   |                                                                               |=======================================================               |  79%   |                                                                               |========================================================              |  80%   |                                                                               |==========================================================            |  82%   |                                                                               |===========================================================           |  84%   |                                                                               |============================================================          |  86%   |                                                                               |=============================================================         |  88%   |                                                                               |==============================================================        |  89%   |                                                                               |================================================================      |  91%   |                                                                               |=================================================================     |  93%   |                                                                               |==================================================================    |  95%   |                                                                               |====================================================================  |  96%   |                                                                               |===================================================================== |  98%   |                                                                               |======================================================================| 100% #> GRETEL  ( 5 / 7 ) #>    |                                                                               |                                                                      |   0%   |                                                                               |==                                                                    |   2%   |                                                                               |===                                                                   |   5%   |                                                                               |=====                                                                 |   7%   |                                                                               |=======                                                               |  10%   |                                                                               |=========                                                             |  12%   |                                                                               |==========                                                            |  15%   |                                                                               |============                                                          |  17%   |                                                                               |==============                                                        |  20%   |                                                                               |===============                                                       |  22%   |                                                                               |=================                                                     |  24%   |                                                                               |===================                                                   |  27%   |                                                                               |====================                                                  |  29%   |                                                                               |======================                                                |  32%   |                                                                               |========================                                              |  34%   |                                                                               |==========================                                            |  37%   |                                                                               |===========================                                           |  39%   |                                                                               |=============================                                         |  41%   |                                                                               |===============================                                       |  44%   |                                                                               |================================                                      |  46%   |                                                                               |==================================                                    |  49%   |                                                                               |====================================                                  |  51%   |                                                                               |======================================                                |  54%   |                                                                               |=======================================                               |  56%   |                                                                               |=========================================                             |  59%   |                                                                               |===========================================                           |  61%   |                                                                               |============================================                          |  63%   |                                                                               |==============================================                        |  66%   |                                                                               |================================================                      |  68%   |                                                                               |==================================================                    |  71%   |                                                                               |===================================================                   |  73%   |                                                                               |=====================================================                 |  76%   |                                                                               |=======================================================               |  78%   |                                                                               |========================================================              |  80%   |                                                                               |==========================================================            |  83%   |                                                                               |============================================================          |  85%   |                                                                               |=============================================================         |  88%   |                                                                               |===============================================================       |  90%   |                                                                               |=================================================================     |  93%   |                                                                               |===================================================================   |  95%   |                                                                               |====================================================================  |  98%   |                                                                               |======================================================================| 100% #> LUCAS  ( 6 / 7 ) #>    |                                                                               |                                                                      |   0%   |                                                                               |=                                                                     |   2%   |                                                                               |===                                                                   |   4%   |                                                                               |====                                                                  |   6%   |                                                                               |======                                                                |   8%   |                                                                               |=======                                                               |  10%   |                                                                               |========                                                              |  12%   |                                                                               |==========                                                            |  14%   |                                                                               |===========                                                           |  16%   |                                                                               |=============                                                         |  18%   |                                                                               |==============                                                        |  20%   |                                                                               |===============                                                       |  22%   |                                                                               |=================                                                     |  24%   |                                                                               |==================                                                    |  26%   |                                                                               |====================                                                  |  28%   |                                                                               |=====================                                                 |  30%   |                                                                               |======================                                                |  32%   |                                                                               |========================                                              |  34%   |                                                                               |=========================                                             |  36%   |                                                                               |===========================                                           |  38%   |                                                                               |============================                                          |  40%   |                                                                               |=============================                                         |  42%   |                                                                               |===============================                                       |  44%   |                                                                               |================================                                      |  46%   |                                                                               |==================================                                    |  48%   |                                                                               |===================================                                   |  50%   |                                                                               |====================================                                  |  52%   |                                                                               |======================================                                |  54%   |                                                                               |=======================================                               |  56%   |                                                                               |=========================================                             |  58%   |                                                                               |==========================================                            |  60%   |                                                                               |===========================================                           |  62%   |                                                                               |=============================================                         |  64%   |                                                                               |==============================================                        |  66%   |                                                                               |================================================                      |  68%   |                                                                               |=================================================                     |  70%   |                                                                               |==================================================                    |  72%   |                                                                               |====================================================                  |  74%   |                                                                               |=====================================================                 |  76%   |                                                                               |=======================================================               |  78%   |                                                                               |========================================================              |  80%   |                                                                               |=========================================================             |  82%   |                                                                               |===========================================================           |  84%   |                                                                               |============================================================          |  86%   |                                                                               |==============================================================        |  88%   |                                                                               |===============================================================       |  90%   |                                                                               |================================================================      |  92%   |                                                                               |==================================================================    |  94%   |                                                                               |===================================================================   |  96%   |                                                                               |===================================================================== |  98%   |                                                                               |======================================================================| 100% #> NIRAN  ( 7 / 7 ) #>    |                                                                               |                                                                      |   0%   |                                                                               |==                                                                    |   3%   |                                                                               |====                                                                  |   5%   |                                                                               |======                                                                |   8%   |                                                                               |=======                                                               |  11%   |                                                                               |=========                                                             |  13%   |                                                                               |===========                                                           |  16%   |                                                                               |=============                                                         |  18%   |                                                                               |===============                                                       |  21%   |                                                                               |=================                                                     |  24%   |                                                                               |==================                                                    |  26%   |                                                                               |====================                                                  |  29%   |                                                                               |======================                                                |  32%   |                                                                               |========================                                              |  34%   |                                                                               |==========================                                            |  37%   |                                                                               |============================                                          |  39%   |                                                                               |=============================                                         |  42%   |                                                                               |===============================                                       |  45%   |                                                                               |=================================                                     |  47%   |                                                                               |===================================                                   |  50%   |                                                                               |=====================================                                 |  53%   |                                                                               |=======================================                               |  55%   |                                                                               |=========================================                             |  58%   |                                                                               |==========================================                            |  61%   |                                                                               |============================================                          |  63%   |                                                                               |==============================================                        |  66%   |                                                                               |================================================                      |  68%   |                                                                               |==================================================                    |  71%   |                                                                               |====================================================                  |  74%   |                                                                               |=====================================================                 |  76%   |                                                                               |=======================================================               |  79%   |                                                                               |=========================================================             |  82%   |                                                                               |===========================================================           |  84%   |                                                                               |=============================================================         |  87%   |                                                                               |===============================================================       |  89%   |                                                                               |================================================================      |  92%   |                                                                               |==================================================================    |  95%   |                                                                               |====================================================================  |  97%   |                                                                               |======================================================================| 100% #>  #> === DONE with run time 15.227 sec === #>  #> Output: #> SpatRaster stack with 7 layers: #> index - name of layers #>   1     PAM_PDI  #>   2     SOLO_PDI  #>   3     ULA_PDI  #>   4     UESI_PDI  #>   5     GRETEL_PDI  #>   6     LUCAS_PDI  #>   7     NIRAN_PDI  #>   # Exporting the power dissipation index raster layers to a NetCDF file writeRast(pdi.nc, path = paste0(tempdir(), \"/\")) # }"},{"path":"/news/index.html","id":"stormr-011","dir":"Changelog","previous_headings":"","what":"StormR 0.1.1","title":"StormR 0.1.1","text":"CRAN release: 2023-11-24 Adjust vignettes CRAN submission Remove sp dependences Minor bugfixes","code":""},{"path":"/news/index.html","id":"stormr-010","dir":"Changelog","previous_headings":"","what":"StormR 0.1.0","title":"StormR 0.1.0","text":"First official release StormR package Multiple bugfixes (cf. closed issues section) Use vignettes detailed use package Use pkgdown building website Use codecoverage Documentation website available https://umr-amap.github.io/StormR/","code":""},{"path":"/news/index.html","id":"stormr-001","dir":"Changelog","previous_headings":"","what":"StormR 0.0.1","title":"StormR 0.0.1","text":"First implementation StormR package","code":""}]
